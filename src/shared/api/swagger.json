{"openapi": "3.1.0", "info": {"title": "KinoCMS (admin-panel)", "version": "1.0.0", "description": "ADMIN API"}, "paths": {"/api/auth/login": {"post": {"operationId": "obtain_token", "summary": "Obtain Token", "parameters": [{"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LoginResponseSchema"}}}}, "401": {"description": "Error: Unauthorized"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Get user's token by provided credentials.\n\nPlease provide:\n  - **Request body**  data with credentials of user\n\nReturns:\n  - **200**: Success response with the data.\n  - **401**: Error: Unauthorized.\n  - **422**: Error: Unprocessable Entity.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["auth"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/LoginSchema"}}}, "required": true}}}, "/api/auth/blacklist": {"post": {"operationId": "blacklist_token", "summary": "Blacklist Token", "parameters": [{"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Schema"}}}}, "401": {"description": "Error: Unauthorized"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Makes refresh token blacklisted.\n\nPlease provide:\n  - **Request body**  data with credentials of user\n\nReturns:\n  - **200**: Success response with the data.\n  - **422**: Error: Unprocessable Entity.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["auth"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/TokenBlacklistInputSchema"}}}, "required": true}}}, "/api/auth/refresh": {"post": {"operationId": "refresh_token", "summary": "Refresh Token", "parameters": [{"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TokenRefreshOutputSchema"}}}}, "401": {"description": "Error: Unauthorized"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Get user's new access token by provided refresh token.\n\nPlease provide:\n  - **Request body**  provide here refresh token\n\nReturns:\n  - **200**: Success response with the data.\n  - **401**: Error: Unauthorized.\n  - **422**: Error: Unprocessable Entity.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["auth"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/TokenRefreshInputSchema"}}}, "required": true}}}, "/api/auth/register/": {"post": {"operationId": "register", "summary": "Register", "parameters": [{"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessageOutSchema"}}}}, "409": {"description": "Error: Conflict"}, "403": {"description": "Error: Forbidden"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Register new user.\n\nPlease provide:\n  - **Request body**  data for registration new user\n\nReturns:\n  - **200**: Success response with the data.\n  - **403**: Error: Forbidden. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041f\u0430\u0440\u043e\u043b\u0456 \u043d\u0435 \u0441\u043f\u0456\u0432\u043f\u0430\u0434\u0430\u044e\u0442\u044c \n\n        2) \u041f\u0430\u0440\u043e\u043b\u044c \u043f\u043e\u0432\u0438\u043d\u0435\u043d \u0431\u0443\u0442\u0438: \n\n           * \u041f\u0440\u0438\u043d\u0430\u0439\u043c\u043d\u0456 \u043e\u0434\u043d\u0430 \u0432\u0435\u043b\u0438\u043a\u0430 \u043b\u0456\u0442\u0435\u0440\u0430 \n\n           * \u041f\u0440\u0438\u043d\u0430\u0439\u043c\u043d\u0456 \u043e\u0434\u043d\u0430 \u043c\u0430\u043b\u0430 \u043b\u0456\u0442\u0435\u0440\u0430 \n\n           * \u041f\u0440\u0438\u043d\u0430\u0439\u043c\u043d\u0456 \u043e\u0434\u043d\u0430 \u0446\u0438\u0444\u0440\u0430 \n\n           * \u041f\u0440\u0438\u043d\u0430\u0439\u043c\u043d\u0456 \u043e\u0434\u0438\u043d \u0441\u043f\u0435\u0446\u0456\u0430\u043b\u044c\u043d\u0438\u0439 \u0441\u0438\u043c\u0432\u043e\u043b \u0456\u0437 \u043d\u0430\u0431\u043e\u0440\u0443 ?!@%^&- \n\n           * \u041c\u0456\u043d\u0456\u043c\u0430\u043b\u044c\u043d\u0430 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 8 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n        3) \u0412\u0432\u0435\u0434\u0435\u043d\u043e \u043d\u0435\u043a\u043e\u0440\u0435\u043a\u0442\u043d\u0438\u0439 \u043d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0443 \n\n        4) \u0406\u043c'\u044f \u0442\u0430 \u043f\u0440\u0456\u0437\u0432\u0438\u0449\u0435 \u043f\u043e\u0432\u0438\u043d\u043d\u043e \u043f\u043e\u0447\u0438\u043d\u0430\u0442\u0438\u0441\u044f \u0437 \u0432\u0435\u043b\u0438\u043a\u043e\u0457 \u043b\u0456\u0442\u0435\u0440\u0438 \n\n           (\u043d\u0430\u0441\u0442\u0443\u043f\u043d\u0456 \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0456), \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u043a\u0438\u0440\u0438\u043b\u0438\u0446\u044f,\n           \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0456 \u0441\u043f\u0435\u0446\u0441\u0438\u043c\u0432\u043e\u043b\u0438('-) \n\n  - **409**: Error: Conflict. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u0426\u044f \u0435\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u0430 \u0430\u0434\u0440\u0435\u0441\u0430 \u0432\u0436\u0435 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0454\u0442\u044c\u0441\u044f\n  - **422**: Error: Unprocessable Entity.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["auth"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRegisterSchema"}}}, "required": true}}}, "/api/auth/cities/choices/": {"get": {"operationId": "get_cities", "summary": "Get Cities", "parameters": [{"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}, {"in": "query", "name": "page", "schema": {"default": 1, "exclusiveMinimum": 0, "title": "Page", "type": "integer"}, "required": false}, {"in": "query", "name": "page_size", "schema": {"default": 100, "exclusiveMaximum": 200, "title": "Page Size", "type": "integer"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResponseSchema_List_"}}}}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Endpoint gets cities for user to choose.\nReturns:\n  - **200**: Success response with the data.\n  - **422**: Error: Unprocessable Entity.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["auth"]}}, "/api/auth/my-profile/": {"get": {"operationId": "get_my_profile", "summary": "Get My Profile", "parameters": [{"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserOutSchema"}}}}, "401": {"description": "Error: Unauthorized"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Get user's personal data by token.\n\nPlease provide:\n  - **Request body**  data for registration new user\n\nReturns:\n  - **200**: Success response with the data.\n  - **401**: Error: Unauthorized. \n\n  - **422**: Error: Unprocessable Entity.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["auth"], "security": [{"CustomJWTAuth": []}]}, "patch": {"operationId": "update_my_profile", "summary": "Update My Profile", "parameters": [{"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserOutSchema"}}}}, "401": {"description": "Error: Unauthorized"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Get user's personal data by token.\n\nPlease provide:\n  - **Request body**  data for registration new user\n\nReturns:\n  - **200**: Success response with the data.\n  - **401**: Error: Unauthorized. \n\n  - **422**: Error: Unprocessable Entity.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["auth"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserUpdateSchema"}}}, "required": true}, "security": [{"CustomJWTAuth": []}]}}, "/api/users/detail/{user_id}/": {"patch": {"operationId": "update_user_by_id", "summary": "Update User By Id", "parameters": [{"in": "path", "name": "user_id", "schema": {"title": "User Id", "type": "integer"}, "required": true}, {"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserOutSchema"}}}}, "403": {"description": "Error: Forbidden"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Update user by id.\n\nPlease provide:\n  - **Request body**  data for updating user\n\nReturns:\n  - **200**: Success response with the data.\n  - **403**: Error: Forbidden. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u0412\u0432\u0435\u0434\u0435\u043d\u043e \u043d\u0435\u043a\u043e\u0440\u0435\u043a\u0442\u043d\u0438\u0439 \u043d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0443 \n\n        2) \u0406\u043c'\u044f \u0442\u0430 \u043f\u0440\u0456\u0437\u0432\u0438\u0449\u0435 \u043f\u043e\u0432\u0438\u043d\u043d\u043e \u043f\u043e\u0447\u0438\u043d\u0430\u0442\u0438\u0441\u044f \u0437 \u0432\u0435\u043b\u0438\u043a\u043e\u0457 \u043b\u0456\u0442\u0435\u0440\u0438\n           (\u043d\u0430\u0441\u0442\u0443\u043f\u043d\u0456 \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0456), \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u043a\u0438\u0440\u0438\u043b\u0438\u0446\u044f,\n           \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0456 \u0441\u043f\u0435\u0446\u0441\u0438\u043c\u0432\u043e\u043b\u0438('-)\n  - **404**: Error: Conflict. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041d\u0435 \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u043e: \u043d\u0435\u043c\u0430\u0454 \u0437\u0431\u0456\u0433\u0456\u0432 \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0456\u0432\n           \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0437\u0430\u043f\u0438\u0442\u0456.\n  - **422**: Error: Unprocessable Entity.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["users"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserUpdateSchema"}}}, "required": true}, "security": [{"CustomJWTAuth": []}]}, "get": {"operationId": "get_user_by_id", "summary": "Get User By Id", "parameters": [{"in": "path", "name": "user_id", "schema": {"title": "User Id", "type": "integer"}, "required": true}, {"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserOutSchema"}}}}, "404": {"description": "Error: Conflict"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Register new user.\n\nPlease provide:\n  - **Request body**  data for registration new user\n\nReturns:\n  - **200**: Success response with the data.\n  - **404**: Error: Conflict. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041d\u0435 \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u043e: \u043d\u0435\u043c\u0430\u0454 \u0437\u0431\u0456\u0433\u0456\u0432 \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0456\u0432\n           \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0437\u0430\u043f\u0438\u0442\u0456.\n  - **422**: Error: Unprocessable Entity.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["users"], "security": [{"CustomJWTAuth": []}]}, "delete": {"operationId": "delete_user_by_id", "summary": "Delete User By Id", "parameters": [{"in": "path", "name": "user_id", "schema": {"title": "User Id", "type": "integer"}, "required": true}, {"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessageOutSchema"}}}}, "404": {"description": "Error: Conflict"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Register new user.\n\nPlease provide:\n  - **Request body**  data for registration new user\n\nReturns:\n  - **200**: Success response with the data.\n  - **404**: Error: Conflict. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041d\u0435 \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u043e: \u043d\u0435\u043c\u0430\u0454 \u0437\u0431\u0456\u0433\u0456\u0432 \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0456\u0432\n           \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0437\u0430\u043f\u0438\u0442\u0456.\n  - **422**: Error: Unprocessable Entity.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["users"], "security": [{"CustomJWTAuth": []}]}}, "/api/users/datable/": {"get": {"operationId": "users_datatable", "summary": "Users Datatable", "parameters": [{"in": "query", "name": "search_line", "schema": {"title": "Search Line", "type": "string"}, "required": false}, {"in": "query", "name": "sort", "schema": {"allOf": [{"enum": ["id", "date_joined", "birthday", "email", "phone_number", "fio", "nickname", "city"], "title": "UserFieldsEnum", "type": "string"}]}, "required": false}, {"in": "query", "name": "direction", "schema": {"allOf": [{"enum": ["ascending", "descending"], "title": "DirectionEnum", "type": "string"}], "default": "descending"}, "required": false}, {"in": "query", "name": "page", "schema": {"default": 1, "exclusiveMinimum": 0, "title": "Page", "type": "integer"}, "required": false}, {"in": "query", "name": "page_size", "schema": {"default": 100, "exclusiveMaximum": 200, "title": "Page Size", "type": "integer"}, "required": false}, {"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResponseSchema_UserOutSchema_"}}}}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Endpoint gets all users.\n\nMakes pagination, search and sorting of records.\n\nPlease provide:\n - **page**  number of page we want to get\n - **page_size**  length of records per page\n - **search_line**  helps to find rows which contains search line\n - **sort**  define by which field sort rows\n - **direction**  determines in which direction to sort\n\nReturns:\n  - **200**: Success response with the data.\n  - **422**: Error: Unprocessable Entity.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["users"], "security": [{"CustomJWTAuth": []}]}}, "/api/mailing/template/": {"post": {"operationId": "create_template", "summary": "Create Template", "parameters": [{"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MailTemplateOutSchema"}}}}, "403": {"description": "Error: Forbidden"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Create template for mailing.\n\nPlease provide:\n  - **file**  file for new template\n\nReturns:\n  - **200**: Success response with the data.\n  - **403**: Error: Forbidden. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u0414\u043e\u0437\u0432\u043e\u043b\u0435\u043d\u043e \u0432\u0456\u0434\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u0438 \u0442\u0456\u043b\u044c\u043a\u0438 html \n\n        2) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0434\u043e\u0437\u0432\u043e\u043b\u0435\u043d\u0438\u0439 \u0440\u043e\u0437\u043c\u0456\u0440 \u0444\u0430\u0439\u043b\u0443 1MB \n\n  - **422**: Error: Unprocessable Entity.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["mailing"], "requestBody": {"content": {"multipart/form-data": {"schema": {"properties": {"file": {"format": "binary", "title": "File", "type": "string"}}, "required": ["file"], "title": "FileParams", "type": "object"}}}, "required": true}, "security": [{"CustomJWTAuth": []}]}}, "/api/mailing/templates/": {"get": {"operationId": "get_templates", "summary": "Get Templates", "parameters": [{"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/MailTemplateOutSchema"}, "title": "Response", "type": "array"}}}}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Get last 5 templates for mailing.\n\nReturns:\n  - **200**: Success response with the data.\n  - **422**: Error: Unprocessable Entity.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["mailing"], "security": [{"CustomJWTAuth": []}]}}, "/api/mailing/template/{temp_id}/": {"delete": {"operationId": "delete_template", "summary": "Delete Template", "parameters": [{"in": "path", "name": "temp_id", "schema": {"title": "Temp Id", "type": "integer"}, "required": true}, {"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessageOutSchema"}}}}, "404": {"description": "Error: Not Found"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Delete template for mailing by id.\n\nReturns:\n  - **200**: Success response with the data.\n  - **403**: Error: Not Found.\n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041d\u0435 \u043c\u043e\u0436\u043d\u0430 \u0432\u0438\u0434\u0430\u043b\u044f\u0442\u0438 \u0448\u0430\u0431\u043b\u043e\u043d\u0438 \u043f\u043e\u043a\u0438 \u0439\u0434\u0435 \u0440\u043e\u0437\u0441\u0438\u043b\u0430\u043d\u043d\u044f.\n  - **404**: Error: Not Found.\n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041d\u0435 \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u043e: \u043d\u0435\u043c\u0430\u0454 \u0437\u0431\u0456\u0433\u0456\u0432 \u0448\u0430\u0431\u043b\u043e\u043d\u0456\u0432\n           \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0437\u0430\u043f\u0438\u0442\u0456.\n  - **422**: Error: Unprocessable Entity.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["mailing"], "security": [{"CustomJWTAuth": []}]}}, "/api/mailing/start/": {"post": {"operationId": "start_mailing", "summary": "Start Mailing", "parameters": [{"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessageOutSchema"}}}}, "404": {"description": "Error: Not Found"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Start mailing letter to recipients.\n\nReturns:\n  - **200**: Success response with the data.\n  - **404**: Error: Not Found. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u0422\u0440\u0435\u0431\u0430 \u0437\u0430\u0447\u0435\u043a\u0430\u0442\u0438 \u043f\u043e\u043a\u0438 \u0437\u0430\u043a\u0456\u043d\u0447\u0438\u0442\u044c\u0441\u044f \u043f\u043e\u0442\u043e\u0447\u043d\u0435 \u0440\u043e\u0437\u0441\u0438\u043b\u0430\u043d\u043d\u044f.\n  - **404**: Error: Not Found.\n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041d\u0435 \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u043e: \u043d\u0435\u043c\u0430\u0454 \u0437\u0431\u0456\u0433\u0456\u0432 \u0448\u0430\u0431\u043b\u043e\u043d\u0456\u0432\n           \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0437\u0430\u043f\u0438\u0442\u0456.\n  - **422**: Error: Unprocessable Entity.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["mailing"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MailingInSchema"}}}, "required": true}, "security": [{"CustomJWTAuth": []}]}}, "/api/mailing/status/": {"get": {"operationId": "status_mailing", "summary": "Status Mailing", "parameters": [{"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskInfoOutSchema"}}}}, "201": {"description": "Created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessageOutSchema"}}}}, "404": {"description": "Error: Not Found"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Get status for current mailing.\n\nReturns:\n  - **200**: Success response with the data.\n  - **201**: Success mailing completed.\n  - **404**: Error: Not Found. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041d\u0435 \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u043e: \u043d\u0435\u043c\u0430\u0454 \u0437\u0431\u0456\u0433\u0456\u0432 \u0448\u0430\u0431\u043b\u043e\u043d\u0456\u0432\n           \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0437\u0430\u043f\u0438\u0442\u0456.\n  - **422**: Error: Unprocessable Entity.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["mailing"], "security": [{"CustomJWTAuth": []}]}}, "/api/gallery/{gallery_id}/": {"get": {"operationId": "get_gallery_by_id", "summary": "Get Gallery By Id", "parameters": [{"in": "path", "name": "gallery_id", "schema": {"title": "Gallery Id", "type": "integer"}, "required": true}, {"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/GalleryItemOutSchema"}, "title": "Response", "type": "array"}}}}, "404": {"description": "Error: Not Found"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Get maximum of gallery fields.\n\nPlease provide:\n  - **gallery_id**  id of gallery we want to get\n\nReturns:\n  - **200**: Success response with the data.\n  - **404**: Error: Not Found. \n\n      \u041f\u0440\u0438\u0447\u0438\u043d\u0438:\n        1) \u041d\u0435 \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u043e: \u043d\u0435\u043c\u0430\u0454 \u0437\u0431\u0456\u0433\u0456\u0432 \u0433\u0430\u043b\u0435\u0440\u0435\u0439\n           \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0437\u0430\u043f\u0438\u0442\u0456.\n  - **422**: Error: Unprocessable Entity.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["galleries"]}}, "/api/cinema/all-cards/": {"get": {"operationId": "get_all_cinema_cards", "summary": "Get All Cinema Cards", "parameters": [{"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}, {"in": "query", "name": "page", "schema": {"default": 1, "exclusiveMinimum": 0, "title": "Page", "type": "integer"}, "required": false}, {"in": "query", "name": "page_size", "schema": {"default": 100, "exclusiveMaximum": 200, "title": "Page Size", "type": "integer"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResponseSchema_CinemaCardOutSchema_"}}}}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Get all cinema cards.\n\nReturns:\n  - **200**: Success response with the data.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["cinemas"]}}, "/api/cinema/": {"post": {"operationId": "create_cinema", "summary": "Create Cinema", "parameters": [{"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessageOutSchema"}}}}, "403": {"description": "Error: Forbidden"}, "409": {"description": "Error: Conflict"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Create cinema.\n\nPlease provide:\n  - **body**  body for creating new cinema\n\nReturns:\n  - **200**: Success response with the data.\n  - **403**: Error: Forbidden. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041d\u0435\u0434\u0456\u0439\u0441\u043d\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f (\u043d\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0435 \u0432\u0435\u043b\u0438\u043a\u0438\u043c\u0438 \u043b\u0456\u0442\u0435\u0440\u0430\u043c\u0438).\n           \u0417 \u0432\u0435\u043b\u0438\u043a\u0438\u0445 \u043b\u0456\u0442\u0435\u0440 \u043f\u043e\u0432\u0438\u043d\u043d\u0456 \u043f\u043e\u0447\u0438\u043d\u0430\u0442\u0438\u0441\u044f (name, description,\n           seo_title, seo_description) \n\n        2) \u0412\u0432\u0435\u0434\u0435\u043d\u043e \u043d\u0435\u043a\u043e\u0440\u0435\u043a\u0442\u043d\u0438\u0439 \u043d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0443 \n\n  - **409**: Error: Conflict.\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041f\u043e\u043b\u0435 name \u043f\u043e\u0432\u0438\u043d\u043d\u043e \u0431\u0443\u0442\u0438 \u0443\u043d\u0456\u043a\u0430\u043b\u044c\u043d\u0438\u043c. \u0426\u044f \u043d\u0430\u0437\u0432\u0430 \u0432\u0436\u0435 \u0437\u0430\u0439\u043d\u044f\u0442\u0430\n  - **422**: Error: Unprocessable Entity. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 description 20_000 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n        2) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 name 100 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n        3) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 seo_title 60 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n        4) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 seo_description 160 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n  - **500**: Internal server error if an unexpected error occurs.\n\nOperations with gallery items:\n - Delete \n\n     1. Be sure to specify the id field \n\n     2. Be sure to specify the field delete=true \n\n - Update \n\n     1. Be sure to specify the id field \n\n     2. Be sure to specify the field delete=false \n\n     3. Be sure to specify the image field \n\n         a) required image if filename is specified. Format base64(svg,png,jpg,jpeg,webp) \n\n         b) filename is required if image is specified. Example: *filename.png* \n\n         c) optional alt. If you don't specify it, I'll take the value from filename \n\n - Create:\n     1. Do not specify the id field \n\n     3. Be sure to specify the image field \n\n         a) required image if filename is specified. Format base64(svg,png,jpg,jpeg,webp) \n\n         b) filename is required if image is specified. Example: *filename.png* \n\n         c) optional alt. If you don't specify it, I'll take the value from filename \n\n     4. Be sure to specify the field delete=false ", "tags": ["cinemas"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CinemaInSchema"}}}, "required": true}, "security": [{"CustomJWTAuth": []}]}}, "/api/cinema/{cnm_slug}/": {"patch": {"operationId": "update_cinema", "summary": "Update Cinema", "parameters": [{"in": "path", "name": "cnm_slug", "schema": {"title": "Cnm Slug", "type": "string"}, "required": true}, {"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessageOutSchema"}}}}, "403": {"description": "Error: Forbidden"}, "404": {"description": "Error: Not Found"}, "409": {"description": "Error: Conflict"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Update cinema.\n\nPlease provide:\n  - **body**  body for creating new cinema\n\nReturns\n  - **200**: Success response with the data.\n  - **403**: Error: Forbidden. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041d\u0435\u0434\u0456\u0439\u0441\u043d\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f (\u043d\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0435 \u0432\u0435\u043b\u0438\u043a\u0438\u043c\u0438 \u043b\u0456\u0442\u0435\u0440\u0430\u043c\u0438).\n           \u0417 \u0432\u0435\u043b\u0438\u043a\u0438\u0445 \u043b\u0456\u0442\u0435\u0440 \u043f\u043e\u0432\u0438\u043d\u043d\u0456 \u043f\u043e\u0447\u0438\u043d\u0430\u0442\u0438\u0441\u044f (name, description,\n           seo_title, seo_description) \n\n        2) \u0412\u0432\u0435\u0434\u0435\u043d\u043e \u043d\u0435\u043a\u043e\u0440\u0435\u043a\u0442\u043d\u0438\u0439 \u043d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0443 \n\n  - **409**: Error: Conflict. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041f\u043e\u043b\u0435 name \u043f\u043e\u0432\u0438\u043d\u043d\u043e \u0431\u0443\u0442\u0438 \u0443\u043d\u0456\u043a\u0430\u043b\u044c\u043d\u0438\u043c. \u0426\u044f \u043d\u0430\u0437\u0432\u0430 \u0432\u0436\u0435 \u0437\u0430\u0439\u043d\u044f\u0442\u0430\n  - **422**: Error: Unprocessable Entity. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 description 20_000 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n        2) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 name 100 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n        3) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 seo_title 60 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n        4) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 seo_description 160 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n  - **500**: Internal server error if an unexpected error occurs.\n\n\nOperations with gallery items:\n - Delete \n\n     1. Be sure to specify the id field \n\n     2. Be sure to specify the field delete=true \n\n - Update \n\n     1. Be sure to specify the id field \n\n     2. Be sure to specify the field delete=false \n\n     3. Be sure to specify the image field \n\n         a) required image if filename is specified. Format base64(svg,png,jpg,jpeg,webp) \n\n         b) filename is required if image is specified. Example: *filename.png* \n\n         c) optional alt. If you don't specify it, I'll take the value from filename \n\n - Create:\n     1. Do not specify the id field \n\n     3. Be sure to specify the image field \n\n         a) required image if filename is specified. Format base64(svg,png,jpg,jpeg,webp) \n\n         b) filename is required if image is specified. Example: *filename.png* \n\n         c) optional alt. If you don't specify it, I'll take the value from filename \n\n     4. Be sure to specify the field delete=false ", "tags": ["cinemas"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CinemaUpdateSchema"}}}, "required": true}, "security": [{"CustomJWTAuth": []}]}, "get": {"operationId": "get_cinema_by_slug", "summary": "Get Cinema By Slug", "parameters": [{"in": "path", "name": "cnm_slug", "schema": {"title": "Cnm Slug", "type": "string"}, "required": true}, {"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CinemaOutSchema"}}}}, "404": {"description": "Error: Not Found"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Create cinema.\n\nPlease provide:\n  - **cinema_id**  id of cinema\n\nReturns:\n  - **200**: Success response with the data.\n  - **404**: Error: Forbidden. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041d\u0435 \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u043e: \u043d\u0435\u043c\u0430\u0454 \u0437\u0431\u0456\u0433\u0456\u0432 \u043a\u0456\u043d\u043e\u0442\u0435\u0430\u0442\u0440\u0456\u0432\n           \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0437\u0430\u043f\u0438\u0442\u0456. \n\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["cinemas"]}, "delete": {"operationId": "delete_cinema_by_slug", "summary": "Delete Cinema By Slug", "parameters": [{"in": "path", "name": "cnm_slug", "schema": {"title": "Cnm Slug", "type": "string"}, "required": true}, {"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessageOutSchema"}}}}, "404": {"description": "Error: Not Found"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Delete cinema by id.\n\nPlease provide:\n  - **cinema_id**  id of cinema\n\nReturns:\n  - **200**: Success response with the data.\n  - **404**: Error: Forbidden. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041d\u0435 \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u043e: \u043d\u0435\u043c\u0430\u0454 \u0437\u0431\u0456\u0433\u0456\u0432 \u043a\u0456\u043d\u043e\u0442\u0435\u0430\u0442\u0440\u0456\u0432\n           \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0437\u0430\u043f\u0438\u0442\u0456. \n\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["cinemas"], "security": [{"CustomJWTAuth": []}]}}, "/api/movie/legal-ages/": {"get": {"operationId": "get_movie_legal_ages", "summary": "Get Movie Legal Ages", "parameters": [{"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}, {"in": "query", "name": "page", "schema": {"default": 1, "exclusiveMinimum": 0, "title": "Page", "type": "integer"}, "required": false}, {"in": "query", "name": "page_size", "schema": {"default": 100, "exclusiveMaximum": 200, "title": "Page Size", "type": "integer"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResponseSchema_List_"}}}}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Get movie legal ages for input.\n\nReturns:\n  - **200**: Success response with the data.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["movies"]}}, "/api/movie/genres/": {"get": {"operationId": "get_movie_genres", "summary": "Get Movie Genres", "parameters": [{"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}, {"in": "query", "name": "page", "schema": {"default": 1, "exclusiveMinimum": 0, "title": "Page", "type": "integer"}, "required": false}, {"in": "query", "name": "page_size", "schema": {"default": 100, "exclusiveMaximum": 200, "title": "Page Size", "type": "integer"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResponseSchema_List_"}}}}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Get genres for input.\n\nReturns:\n  - **200**: Success response with the data.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["movies"]}}, "/api/movie/techs/": {"get": {"operationId": "get_techs", "summary": "Get Techs", "parameters": [{"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}, {"in": "query", "name": "page", "schema": {"default": 1, "exclusiveMinimum": 0, "title": "Page", "type": "integer"}, "required": false}, {"in": "query", "name": "page_size", "schema": {"default": 100, "exclusiveMaximum": 200, "title": "Page Size", "type": "integer"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResponseSchema_List_"}}}}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Get techs for input.\n\nReturns:\n  - **200**: Success response with the data.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["movies"]}}, "/api/movie/countries/": {"get": {"operationId": "get_countries", "summary": "Get Countries", "parameters": [{"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}, {"in": "query", "name": "page", "schema": {"default": 1, "exclusiveMinimum": 0, "title": "Page", "type": "integer"}, "required": false}, {"in": "query", "name": "page_size", "schema": {"default": 100, "exclusiveMaximum": 200, "title": "Page Size", "type": "integer"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResponseSchema_List_"}}}}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Get countries for input.\n\nReturns:\n  - **200**: Success response with the data.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["movies"]}}, "/api/movie/participants/": {"get": {"operationId": "get_participants", "summary": "Get Participants", "parameters": [{"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}, {"in": "query", "name": "page", "schema": {"default": 1, "exclusiveMinimum": 0, "title": "Page", "type": "integer"}, "required": false}, {"in": "query", "name": "page_size", "schema": {"default": 100, "exclusiveMaximum": 200, "title": "Page Size", "type": "integer"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResponseSchema_MovieParticipantOutSchema_"}}}}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Get participants for input.\n\nReturns:\n  - **200**: Success response with the data.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["movies"]}}, "/api/movie/all-cards/": {"get": {"operationId": "get_all_movie_cards", "summary": "Get All Movie Cards", "parameters": [{"in": "query", "name": "release", "schema": {"allOf": [{"enum": ["soon", "current"], "title": "ReleaseEnum", "type": "string"}], "default": "current"}, "required": false}, {"in": "query", "name": "page", "schema": {"default": 1, "exclusiveMinimum": 0, "title": "Page", "type": "integer"}, "required": false}, {"in": "query", "name": "page_size", "schema": {"default": 100, "exclusiveMaximum": 200, "title": "Page Size", "type": "integer"}, "required": false}, {"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResponseSchema_MovieCardOutSchema_"}}}}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Get all movie cards.\n\nReturns:\n  - **200**: Success response with the data.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["movies"]}}, "/api/movie/": {"post": {"operationId": "create_movie", "summary": "Create Movie", "parameters": [{"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessageOutSchema"}}}}, "403": {"description": "Error: Forbidden"}, "409": {"description": "Error: Conflict"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Create movie.\n\nPlease provide:\n  - **body**  body for creating new movie\n\nReturns:\n  - **200**: Success response with the data.\n  - **403**: Error: Forbidden. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041d\u0435\u0434\u0456\u0439\u0441\u043d\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f (\u043d\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0435 \u0432\u0435\u043b\u0438\u043a\u0438\u043c\u0438 \u043b\u0456\u0442\u0435\u0440\u0430\u043c\u0438).\n           \u0417 \u0432\u0435\u043b\u0438\u043a\u0438\u0445 \u043b\u0456\u0442\u0435\u0440 \u043f\u043e\u0432\u0438\u043d\u043d\u0456 \u043f\u043e\u0447\u0438\u043d\u0430\u0442\u0438\u0441\u044f (name, description,\n           seo_title, seo_description) \n\n  - **409**: Error: Conflict.\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041f\u043e\u043b\u0435 name \u043f\u043e\u0432\u0438\u043d\u043d\u043e \u0431\u0443\u0442\u0438 \u0443\u043d\u0456\u043a\u0430\u043b\u044c\u043d\u0438\u043c. \u0426\u044f \u043d\u0430\u0437\u0432\u0430 \u0432\u0436\u0435 \u0437\u0430\u0439\u043d\u044f\u0442\u0430\n  - **422**: Error: Unprocessable Entity. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 description 20_000 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n        2) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 name 100 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n        3) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 seo_title 60 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n        4) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 seo_description 160 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n  - **500**: Internal server error if an unexpected error occurs.\n\nOperations with gallery items:\n - Delete \n\n     1. Be sure to specify the id field \n\n     2. Be sure to specify the field delete=true \n\n - Update \n\n     1. Be sure to specify the id field \n\n     2. Be sure to specify the field delete=false \n\n     3. Be sure to specify the image field \n\n         a) required image if filename is specified. Format base64(svg,png,jpg,jpeg,webp) \n\n         b) filename is required if image is specified. Example: *filename.png* \n\n         c) optional alt. If you don't specify it, I'll take the value from filename \n\n - Create:\n     1. Do not specify the id field \n\n     3. Be sure to specify the image field \n\n         a) required image if filename is specified. Format base64(svg,png,jpg,jpeg,webp) \n\n         b) filename is required if image is specified. Example: *filename.png* \n\n         c) optional alt. If you don't specify it, I'll take the value from filename \n\n     4. Be sure to specify the field delete=false ", "tags": ["movies"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MovieInSchema"}}}, "required": true}, "security": [{"CustomJWTAuth": []}]}}, "/api/movie/{mv_slug}/": {"patch": {"operationId": "update_movie", "summary": "Update Movie", "parameters": [{"in": "path", "name": "mv_slug", "schema": {"title": "Mv Slug", "type": "string"}, "required": true}, {"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessageOutSchema"}}}}, "403": {"description": "Error: Forbidden"}, "404": {"description": "Error: Not Found"}, "409": {"description": "Error: Conflict"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Update movie by slug.\n\nPlease provide:\n  - **body**  body for creating new movie\n\nReturns:\n  - **200**: Success response with the data.\n  - **403**: Error: Forbidden. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041d\u0435\u0434\u0456\u0439\u0441\u043d\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f (\u043d\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0435 \u0432\u0435\u043b\u0438\u043a\u0438\u043c\u0438 \u043b\u0456\u0442\u0435\u0440\u0430\u043c\u0438).\n           \u0417 \u0432\u0435\u043b\u0438\u043a\u0438\u0445 \u043b\u0456\u0442\u0435\u0440 \u043f\u043e\u0432\u0438\u043d\u043d\u0456 \u043f\u043e\u0447\u0438\u043d\u0430\u0442\u0438\u0441\u044f (name, description,\n           seo_title, seo_description) \n\n  - **409**: Error: Conflict. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041f\u043e\u043b\u0435 name \u043f\u043e\u0432\u0438\u043d\u043d\u043e \u0431\u0443\u0442\u0438 \u0443\u043d\u0456\u043a\u0430\u043b\u044c\u043d\u0438\u043c. \u0426\u044f \u043d\u0430\u0437\u0432\u0430 \u0432\u0436\u0435 \u0437\u0430\u0439\u043d\u044f\u0442\u0430\n  - **422**: Error: Unprocessable Entity. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 description 20_000 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n        2) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 name 100 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n        3) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 seo_title 60 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n        4) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 seo_description 160 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n  - **500**: Internal server error if an unexpected error occurs.\n\nOperations with gallery items:\n - Delete \n\n     1. Be sure to specify the id field \n\n     2. Be sure to specify the field delete=true \n\n - Update \n\n     1. Be sure to specify the id field \n\n     2. Be sure to specify the field delete=false \n\n     3. Be sure to specify the image field \n\n         a) required image if filename is specified. Format base64(svg,png,jpg,jpeg,webp) \n\n         b) filename is required if image is specified. Example: *filename.png* \n\n         c) optional alt. If you don't specify it, I'll take the value from filename \n\n - Create:\n     1. Do not specify the id field \n\n     3. Be sure to specify the image field \n\n         a) required image if filename is specified. Format base64(svg,png,jpg,jpeg,webp) \n\n         b) filename is required if image is specified. Example: *filename.png* \n\n         c) optional alt. If you don't specify it, I'll take the value from filename \n\n     4. Be sure to specify the field delete=false ", "tags": ["movies"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MovieUpdateSchema"}}}, "required": true}, "security": [{"CustomJWTAuth": []}]}, "get": {"operationId": "get_movie_by_slug", "summary": "Get Movie By Slug", "parameters": [{"in": "path", "name": "mv_slug", "schema": {"title": "Mv Slug", "type": "string"}, "required": true}, {"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MovieOutSchema"}}}}, "404": {"description": "Error: Not Found"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Get movie by slug.\n\nPlease provide:\n  - **mv_slug**  slug of movie\n\nReturns:\n  - **200**: Success response with the data.\n  - **404**: Error: Forbidden. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041d\u0435 \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u043e: \u043d\u0435\u043c\u0430\u0454 \u0437\u0431\u0456\u0433\u0456\u0432 \u0444\u0456\u043b\u044c\u043c\u0456\u0432\n           \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0437\u0430\u043f\u0438\u0442\u0456. \n\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["movies"]}, "delete": {"operationId": "delete_movie_by_slug", "summary": "Delete Movie By Slug", "parameters": [{"in": "path", "name": "mv_slug", "schema": {"title": "Mv Slug", "type": "string"}, "required": true}, {"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessageOutSchema"}}}}, "404": {"description": "Error: Not Found"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Delete movie by slug.\n\nPlease provide:\n  - **mv_slug**  slug of movie\n\nReturns:\n  - **200**: Success response with the data.\n  - **404**: Error: Forbidden. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041d\u0435 \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u043e: \u043d\u0435\u043c\u0430\u0454 \u0437\u0431\u0456\u0433\u0456\u0432 \u0444\u0456\u043b\u044c\u043c\u0456\u0432\n           \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0437\u0430\u043f\u0438\u0442\u0456. \n\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["movies"], "security": [{"CustomJWTAuth": []}]}}, "/api/hall/all-cards/": {"get": {"operationId": "get_all_hall_cards", "summary": "Get All Hall Cards", "parameters": [{"in": "query", "name": "cnm_slug", "schema": {"title": "Cnm Slug", "type": "string"}, "required": true}, {"in": "query", "name": "page", "schema": {"default": 1, "exclusiveMinimum": 0, "title": "Page", "type": "integer"}, "required": false}, {"in": "query", "name": "page_size", "schema": {"default": 100, "exclusiveMaximum": 200, "title": "Page Size", "type": "integer"}, "required": false}, {"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResponseSchema_HallCardOutSchema_"}}}}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Get all hall cards.\n\nReturns:\n  - **200**: Success response with the data.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["halls"]}}, "/api/hall/": {"post": {"operationId": "create_hall", "summary": "Create Hall", "parameters": [{"in": "query", "name": "cnm_slug", "schema": {"title": "Cnm Slug", "type": "string"}, "required": true}, {"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessageOutSchema"}}}}, "403": {"description": "Error: Forbidden"}, "409": {"description": "Error: Conflict"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Create hall.\n\nPlease provide:\n  - **body**  body for creating new hall\n\nReturns:\n  - **200**: Success response with the data.\n  - **403**: Error: Forbidden. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041d\u0435\u0434\u0456\u0439\u0441\u043d\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f (\u043d\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0435 \u0432\u0435\u043b\u0438\u043a\u0438\u043c\u0438 \u043b\u0456\u0442\u0435\u0440\u0430\u043c\u0438).\n           \u0417 \u0432\u0435\u043b\u0438\u043a\u0438\u0445 \u043b\u0456\u0442\u0435\u0440 \u043f\u043e\u0432\u0438\u043d\u043d\u0456 \u043f\u043e\u0447\u0438\u043d\u0430\u0442\u0438\u0441\u044f (description,\n           seo_title, seo_description) \n\n  - **409**: Error: Conflict.\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041f\u043e\u043b\u0435 name \u043f\u043e\u0432\u0438\u043d\u043d\u043e \u0431\u0443\u0442\u0438 \u0443\u043d\u0456\u043a\u0430\u043b\u044c\u043d\u0438\u043c. \u0426\u044f \u043d\u0430\u0437\u0432\u0430 \u0432\u0436\u0435 \u0437\u0430\u0439\u043d\u044f\u0442\u0430\n  - **422**: Error: Unprocessable Entity. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 description 20_000 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n        2) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 number 60 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n        3) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 seo_title 60 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n        4) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 seo_description 160 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n  - **500**: Internal server error if an unexpected error occurs.\n\n\nOperations with gallery items:\n - Delete \n\n     1. Be sure to specify the id field \n\n     2. Be sure to specify the field delete=true \n\n - Update \n\n     1. Be sure to specify the id field \n\n     2. Be sure to specify the field delete=false \n\n     3. Be sure to specify the image field \n\n         a) required image if filename is specified. Format base64(svg,png,jpg,jpeg,webp) \n\n         b) filename is required if image is specified. Example: *filename.png* \n\n         c) optional alt. If you don't specify it, I'll take the value from filename \n\n - Create:\n     1. Do not specify the id field \n\n     3. Be sure to specify the image field \n\n         a) required image if filename is specified. Format base64(svg,png,jpg,jpeg,webp) \n\n         b) filename is required if image is specified. Example: *filename.png* \n\n         c) optional alt. If you don't specify it, I'll take the value from filename \n\n     4. Be sure to specify the field delete=false ", "tags": ["halls"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HallInSchema"}}}, "required": true}, "security": [{"CustomJWTAuth": []}]}}, "/api/hall/{hall_id}/": {"patch": {"operationId": "update_hall", "summary": "Update Hall", "parameters": [{"in": "path", "name": "hall_id", "schema": {"title": "Hall Id", "type": "integer"}, "required": true}, {"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessageOutSchema"}}}}, "403": {"description": "Error: Forbidden"}, "404": {"description": "Error: Not Found"}, "409": {"description": "Error: Conflict"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Update hall.\n\nPlease provide:\n  - **body**  body for creating new hall\n\nReturns:\n  - **200**: Success response with the data.\n  - **403**: Error: Forbidden. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041d\u0435\u0434\u0456\u0439\u0441\u043d\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f (\u043d\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0435 \u0432\u0435\u043b\u0438\u043a\u0438\u043c\u0438 \u043b\u0456\u0442\u0435\u0440\u0430\u043c\u0438).\n           \u0417 \u0432\u0435\u043b\u0438\u043a\u0438\u0445 \u043b\u0456\u0442\u0435\u0440 \u043f\u043e\u0432\u0438\u043d\u043d\u0456 \u043f\u043e\u0447\u0438\u043d\u0430\u0442\u0438\u0441\u044f (description,\n           seo_title, seo_description) \n\n  - **409**: Error: Conflict. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041f\u043e\u043b\u0435 name \u043f\u043e\u0432\u0438\u043d\u043d\u043e \u0431\u0443\u0442\u0438 \u0443\u043d\u0456\u043a\u0430\u043b\u044c\u043d\u0438\u043c. \u0426\u044f \u043d\u0430\u0437\u0432\u0430 \u0432\u0436\u0435 \u0437\u0430\u0439\u043d\u044f\u0442\u0430\n  - **422**: Error: Unprocessable Entity. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 description 20_000 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n        2) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 number 60 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n        3) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 seo_title 60 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n        4) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 seo_description 160 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n  - **500**: Internal server error if an unexpected error occurs.\n\n\nOperations with gallery items:\n - Delete \n\n     1. Be sure to specify the id field \n\n     2. Be sure to specify the field delete=true \n\n - Update \n\n     1. Be sure to specify the id field \n\n     2. Be sure to specify the field delete=false \n\n     3. Be sure to specify the image field \n\n         a) required image if filename is specified. Format base64(svg,png,jpg,jpeg,webp) \n\n         b) filename is required if image is specified. Example: *filename.png* \n\n         c) optional alt. If you don't specify it, I'll take the value from filename \n\n - Create:\n     1. Do not specify the id field \n\n     3. Be sure to specify the image field \n\n         a) required image if filename is specified. Format base64(svg,png,jpg,jpeg,webp) \n\n         b) filename is required if image is specified. Example: *filename.png* \n\n         c) optional alt. If you don't specify it, I'll take the value from filename \n\n     4. Be sure to specify the field delete=false ", "tags": ["halls"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HallUpdateSchema"}}}, "required": true}, "security": [{"CustomJWTAuth": []}]}, "get": {"operationId": "get_hall_by_id", "summary": "Get Hall By Id", "parameters": [{"in": "path", "name": "hall_id", "schema": {"title": "Hall Id", "type": "integer"}, "required": true}, {"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HallOutSchema"}}}}, "404": {"description": "Error: Not Found"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Create hall.\n\nPlease provide:\n  - **hall_id**  id of hall\n\nReturns:\n  - **200**: Success response with the data.\n  - **404**: Error: Forbidden. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041d\u0435 \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u043e: \u043d\u0435\u043c\u0430\u0454 \u0437\u0431\u0456\u0433\u0456\u0432 \u0437\u0430\u043b\u0456\u0432\n           \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0437\u0430\u043f\u0438\u0442\u0456. \n\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["halls"]}, "delete": {"operationId": "delete_hall_by_slug", "summary": "Delete Hall By Slug", "parameters": [{"in": "path", "name": "hall_id", "schema": {"title": "Hall Id", "type": "integer"}, "required": true}, {"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessageOutSchema"}}}}, "404": {"description": "Error: Not Found"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Delete hall by id.\n\nPlease provide:\n  - **hall_id**  id of hall\n\nReturns:\n  - **200**: Success response with the data.\n  - **404**: Error: Forbidden. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041d\u0435 \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u043e: \u043d\u0435\u043c\u0430\u0454 \u0437\u0431\u0456\u0433\u0456\u0432 \u0437\u0430\u043b\u0456\u0432\n           \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0437\u0430\u043f\u0438\u0442\u0456. \n\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["halls"], "security": [{"CustomJWTAuth": []}]}}, "/api/slider/speed-choices/": {"get": {"operationId": "get_speed_choices", "summary": "Get Speed Choices", "parameters": [{"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}, {"in": "query", "name": "page", "schema": {"default": 1, "exclusiveMinimum": 0, "title": "Page", "type": "integer"}, "required": false}, {"in": "query", "name": "page_size", "schema": {"default": 100, "exclusiveMaximum": 200, "title": "Page Size", "type": "integer"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResponseSchema_List_"}}}}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Get speed choices for input.\n\nReturns:\n  - **200**: Success response with the data.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["sliders"]}}, "/api/slider/top/": {"patch": {"operationId": "update_top_slider", "summary": "Update Top Slider", "parameters": [{"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessageOutSchema"}}}}, "403": {"description": "Error: Forbidden"}, "404": {"description": "Error: Not Found"}, "409": {"description": "Error: Conflict"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Update top slider and it's items.\n\nPlease provide:\n  - **body**  body for updating related items to top slider\n\nReturns:\n  - **200**: Success response with the data.\n  - **403**: Error: Forbidden. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041d\u0435\u0434\u0456\u0439\u0441\u043d\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f (\u043d\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0435 \u0432\u0435\u043b\u0438\u043a\u0438\u043c\u0438 \u043b\u0456\u0442\u0435\u0440\u0430\u043c\u0438).\n           \u0417 \u0432\u0435\u043b\u0438\u043a\u0438\u0445 \u043b\u0456\u0442\u0435\u0440 \u043f\u043e\u0432\u0438\u043d\u043d\u0435\u043d \u043f\u043e\u0447\u0438\u043d\u0430\u0442\u0438\u0441\u044f text \n\n  - **422**: Error: Unprocessable Entity. \n\n  - **500**: Internal server error if an unexpected error occurs.\n\nOperations with slider items:\n - Delete \n\n     1. Be sure to specify the id field \n\n     2. Be sure to specify the field delete=true \n\n - Update \n\n     1. Be sure to specify the id field \n\n     2. Be sure to specify the field delete=false \n\n     3. It is optional to specify the image field \n\n         a) required image if filename is specified. Format base64(svg,png,jpg,jpeg,webp) \n\n         b) filename is required if image is specified. Example: *filename.png* \n\n         c) optional alt. If you don't specify it, I'll take the value from filename \n\n     4. It is not necessary to specify the url field\n     5. It is not necessary to specify the text_uk, text_ru field\n - Create:\n     1. Do not specify the id field \n\n     2. Be sure to specify the url field \n\n     3. Be sure to specify the image field \n\n         a) required image if filename is specified. Format base64(svg,png,jpg,jpeg,webp) \n\n         b) filename is required if image is specified. Example: *filename.png* \n\n         c) optional alt. If you don't specify it, I'll take the value from filename \n\n     4. Be sure to specify the field delete=false \n\n     5. Be sure to specify the text_uk, text_ru field", "tags": ["sliders"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/TopSliderUpdateSchema"}}}, "required": true}, "security": [{"CustomJWTAuth": []}]}, "get": {"operationId": "get_top_slider", "summary": "Get Top Slider", "parameters": [{"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TopSliderOutSchema"}}}}, "404": {"description": "Error: Not Found"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Get top slider and related items for admin.\nReturns:\n  - **200**: Success response with the data.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["sliders"]}}, "/api/slider/bottom/": {"patch": {"operationId": "update_bottom_slider", "summary": "Update Bottom Slider", "parameters": [{"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessageOutSchema"}}}}, "403": {"description": "Error: Forbidden"}, "404": {"description": "Error: Not Found"}, "409": {"description": "Error: Conflict"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Update bottom slider and it's items.\n\nPlease provide:\n  - **body**  body for updating related items to bottom slider\n\nReturns:\n  - **200**: Success response with the data.\n  - **403**: Error: Forbidden. \n\n  - **422**: Error: Unprocessable Entity. \n\n  - **500**: Internal server error if an unexpected error occurs.\n\nOperations with slider items:\n - Delete \n\n     1. Be sure to specify the id field \n\n     2. Be sure to specify the field delete=true \n\n - Update \n\n     1. Be sure to specify the id field \n\n     2. Be sure to specify the field delete=false \n\n     3. It is optional to specify the image field \n\n         a) required image if filename is specified. Format base64(svg,png,jpg,jpeg,webp) \n\n         b) filename is required if image is specified. Example: *filename.png* \n\n         c) optional alt. If you don't specify it, I'll take the value from filename \n\n     4. It is not necessary to specify the url field\n - Create:\n     1. Do not specify the id field \n\n     2. Be sure to specify the url field \n\n     3. Be sure to specify the image field \n\n         a) required image if filename is specified. Format base64(svg,png,jpg,jpeg,webp) \n\n         b) filename is required if image is specified. Example: *filename.png* \n\n         c) optional alt. If you don't specify it, I'll take the value from filename \n\n     4. Be sure to specify the field delete=false ", "tags": ["sliders"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BottomSliderUpdateSchema"}}}, "required": true}, "security": [{"CustomJWTAuth": []}]}, "get": {"operationId": "get_bottom_slider", "summary": "Get Bottom Slider", "parameters": [{"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BottomSliderOutSchema"}}}}, "404": {"description": "Error: Not Found"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Get bottom slider and related items for admin.\n\nReturns:\n  - **200**: Success response with the data.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["sliders"]}}, "/api/slider/etend-banner/": {"patch": {"operationId": "update_etend_banner", "summary": "Update Etend Banner", "parameters": [{"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessageOutSchema"}}}}, "403": {"description": "Error: Forbidden"}, "404": {"description": "Error: Not Found"}, "409": {"description": "Error: Conflict"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Update etend_banner and it's items.\n\nPlease provide:\n  - **body**  body for updating related items to etend_banner\n\nReturns:\n  - **200**: Success response with the data.\n  - **403**: Error: Forbidden. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438:\n    1) \u041d\u0435\u0432\u0456\u0440\u043d\u0438\u0439 \u0444\u043e\u0440\u043c\u0430\u0442 \u043a\u043e\u043b\u044c\u043e\u0440\u0443 \u0431\u0443\u043b\u043e \u0432\u0432\u0435\u0434\u0435\u043d\u043e\n  - **422**: Error: Unprocessable Entity. \n\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["sliders"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ETEndBBannerUpdateSchema"}}}, "required": true}, "security": [{"CustomJWTAuth": []}]}, "get": {"operationId": "get_etend_banner", "summary": "Get Etend Banner", "parameters": [{"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ETEndBBannerOutSchema"}}}}, "404": {"description": "Error: Not Found"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Get get_etend_banner and related items for admin.\n\nReturns:\n  - **200**: Success response with the data.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["sliders"]}}, "/api/news_promo/all-cards/": {"get": {"operationId": "get_all_news_promo_cards", "summary": "Get All News Promo Cards", "parameters": [{"in": "query", "name": "promo", "schema": {"title": "Promo", "type": "boolean"}, "required": true}, {"in": "query", "name": "page", "schema": {"default": 1, "exclusiveMinimum": 0, "title": "Page", "type": "integer"}, "required": false}, {"in": "query", "name": "page_size", "schema": {"default": 100, "exclusiveMaximum": 200, "title": "Page Size", "type": "integer"}, "required": false}, {"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResponseSchema_NewsPromoCardOutSchema_"}}}}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Get all news_promo cards.\n\nReturns:\n  - **200**: Success response with the data.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["news_promos"], "security": [{"CustomJWTAuth": []}]}}, "/api/news_promo/": {"post": {"operationId": "create_news_promo", "summary": "Create News Promo", "parameters": [{"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessageOutSchema"}}}}, "403": {"description": "Error: Forbidden"}, "409": {"description": "Error: Conflict"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Create news_promo.\n\nPlease provide:\n  - **body**  body for creating new news_promo\n\nReturns:\n  - **200**: Success response with the data.\n  - **403**: Error: Forbidden. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041d\u0435\u0434\u0456\u0439\u0441\u043d\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f (\u043d\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0435 \u0432\u0435\u043b\u0438\u043a\u0438\u043c\u0438 \u043b\u0456\u0442\u0435\u0440\u0430\u043c\u0438).\n           \u0417 \u0432\u0435\u043b\u0438\u043a\u0438\u0445 \u043b\u0456\u0442\u0435\u0440 \u043f\u043e\u0432\u0438\u043d\u043d\u0456 \u043f\u043e\u0447\u0438\u043d\u0430\u0442\u0438\u0441\u044f (name, description,\n           seo_title, seo_description) \n\n  - **409**: Error: Conflict.\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041f\u043e\u043b\u0435 name \u043f\u043e\u0432\u0438\u043d\u043d\u043e \u0431\u0443\u0442\u0438 \u0443\u043d\u0456\u043a\u0430\u043b\u044c\u043d\u0438\u043c. \u0426\u044f \u043d\u0430\u0437\u0432\u0430 \u0432\u0436\u0435 \u0437\u0430\u0439\u043d\u044f\u0442\u0430\n  - **422**: Error: Unprocessable Entity. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 description 20_000 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n        2) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 name 60 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n        3) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 seo_title 60 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n        4) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 seo_description 160 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n  - **500**: Internal server error if an unexpected error occurs.\n\n\nOperations with gallery items:\n - Delete \n\n     1. Be sure to specify the id field \n\n     2. Be sure to specify the field delete=true \n\n - Update \n\n     1. Be sure to specify the id field \n\n     2. Be sure to specify the field delete=false \n\n     3. Be sure to specify the image field \n\n         a) required image if filename is specified.\n            Format base64(svg,png,jpg,jpeg,webp) \n\n         b) filename is required if image is specified.\n            Example: *filename.png* \n\n         c) optional alt. If you don't specify it,\n            I'll take the value from filename \n\n - Create:\n     1. Do not specify the id field \n\n     3. Be sure to specify the image field \n\n         a) required image if filename is specified.\n            Format base64(svg,png,jpg,jpeg,webp) \n\n         b) filename is required if image is specified.\n            Example: *filename.png* \n\n         c) optional alt. If you don't specify it,\n            I'll take the value from filename \n\n     4. Be sure to specify the field delete=false ", "tags": ["news_promos"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/NewsPromoInSchema"}}}, "required": true}, "security": [{"CustomJWTAuth": []}]}}, "/api/news_promo/{np_slug}/": {"patch": {"operationId": "update_news_promo", "summary": "Update News Promo", "parameters": [{"in": "path", "name": "np_slug", "schema": {"title": "Np Slug", "type": "string"}, "required": true}, {"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessageOutSchema"}}}}, "403": {"description": "Error: Forbidden"}, "404": {"description": "Error: Not Found"}, "409": {"description": "Error: Conflict"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Update news_promo.\n\nPlease provide:\n  - **body**  body for creating new news_promo\n\nReturns\n  - **200**: Success response with the data.\n  - **403**: Error: Forbidden. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041d\u0435\u0434\u0456\u0439\u0441\u043d\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f (\u043d\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0435 \u0432\u0435\u043b\u0438\u043a\u0438\u043c\u0438 \u043b\u0456\u0442\u0435\u0440\u0430\u043c\u0438).\n           \u0417 \u0432\u0435\u043b\u0438\u043a\u0438\u0445 \u043b\u0456\u0442\u0435\u0440 \u043f\u043e\u0432\u0438\u043d\u043d\u0456 \u043f\u043e\u0447\u0438\u043d\u0430\u0442\u0438\u0441\u044f (name, description,\n           seo_title, seo_description) \n\n  - **409**: Error: Conflict. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041f\u043e\u043b\u0435 name \u043f\u043e\u0432\u0438\u043d\u043d\u043e \u0431\u0443\u0442\u0438 \u0443\u043d\u0456\u043a\u0430\u043b\u044c\u043d\u0438\u043c. \u0426\u044f \u043d\u0430\u0437\u0432\u0430 \u0432\u0436\u0435 \u0437\u0430\u0439\u043d\u044f\u0442\u0430\n  - **422**: Error: Unprocessable Entity. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 description 20_000 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n        2) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 name 60 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n        3) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 seo_title 60 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n        4) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 seo_description 160 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n  - **500**: Internal server error if an unexpected error occurs.\n\n\nOperations with gallery items:\n - Delete \n\n     1. Be sure to specify the id field \n\n     2. Be sure to specify the field delete=true \n\n - Update \n\n     1. Be sure to specify the id field \n\n     2. Be sure to specify the field delete=false \n\n     3. Be sure to specify the image field \n\n         a) required image if filename is specified. Format base64(svg,png,jpg,jpeg,webp) \n\n         b) filename is required if image is specified. Example: *filename.png* \n\n         c) optional alt. If you don't specify it, I'll take the value from filename \n\n - Create:\n     1. Do not specify the id field \n\n     3. Be sure to specify the image field \n\n         a) required image if filename is specified. Format base64(svg,png,jpg,jpeg,webp) \n\n         b) filename is required if image is specified. Example: *filename.png* \n\n         c) optional alt. If you don't specify it, I'll take the value from filename \n\n     4. Be sure to specify the field delete=false ", "tags": ["news_promos"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/NewsPromoUpdateSchema"}}}, "required": true}, "security": [{"CustomJWTAuth": []}]}, "get": {"operationId": "get_news_promo_by_slug", "summary": "Get News Promo By Slug", "parameters": [{"in": "path", "name": "np_slug", "schema": {"title": "Np Slug", "type": "string"}, "required": true}, {"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NewsPromoOutSchema"}}}}, "404": {"description": "Error: Not Found"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Get news or promo by slug.\n\nPlease provide slug:\n  - **news_promo_slug**  slug of news or promo\n\nReturns:\n  - **200**: Success response with the data.\n  - **404**: Error: Forbidden. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041d\u0435 \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u043e: \u043d\u0435\u043c\u0430\u0454 \u0437\u0431\u0456\u0433\u0456\u0432 \u043d\u043e\u0432\u0438\u043d \u0447\u0438 \u0430\u043a\u0446\u0456\u0439\n           \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0437\u0430\u043f\u0438\u0442\u0456. \n\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["news_promos"], "security": [{"CustomJWTAuth": []}]}, "delete": {"operationId": "delete_news_promo_by_slug", "summary": "Delete News Promo By Slug", "parameters": [{"in": "path", "name": "np_slug", "schema": {"title": "Np Slug", "type": "string"}, "required": true}, {"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessageOutSchema"}}}}, "404": {"description": "Error: Not Found"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Delete news_promo by slug.\n\nPlease provide:\n  - **news_promo_slug**  slug of news_promo\n\nReturns:\n  - **200**: Success response with the data.\n  - **404**: Error: Forbidden. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041d\u0435 \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u043e: \u043d\u0435\u043c\u0430\u0454 \u0437\u0431\u0456\u0433\u0456\u0432 \u043d\u043e\u0432\u0438\u043d \u0447\u0438 \u0430\u043a\u0446\u0456\u0439\n           \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0437\u0430\u043f\u0438\u0442\u0456. \n\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["news_promos"], "security": [{"CustomJWTAuth": []}]}}, "/api/page/all-cards/": {"get": {"operationId": "get_all_page_cards", "summary": "Get All Page Cards", "parameters": [{"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}, {"in": "query", "name": "page", "schema": {"default": 1, "exclusiveMinimum": 0, "title": "Page", "type": "integer"}, "required": false}, {"in": "query", "name": "page_size", "schema": {"default": 100, "exclusiveMaximum": 200, "title": "Page Size", "type": "integer"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResponseSchema_PageCardOutSchema_"}}}}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Get all page cards.\n\nReturns:\n  - **200**: Success response with the data.\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["pages"], "security": [{"CustomJWTAuth": []}]}}, "/api/page/": {"post": {"operationId": "create_page", "summary": "Create Page", "parameters": [{"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessageOutSchema"}}}}, "403": {"description": "Error: Forbidden"}, "409": {"description": "Error: Conflict"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Create page.\n\nPlease provide:\n  - **body**  body for creating new page\n\nReturns:\n  - **200**: Success response with the data.\n  - **403**: Error: Forbidden. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041d\u0435\u0434\u0456\u0439\u0441\u043d\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f (\u043d\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0435 \u0432\u0435\u043b\u0438\u043a\u0438\u043c\u0438 \u043b\u0456\u0442\u0435\u0440\u0430\u043c\u0438).\n           \u0417 \u0432\u0435\u043b\u0438\u043a\u0438\u0445 \u043b\u0456\u0442\u0435\u0440 \u043f\u043e\u0432\u0438\u043d\u043d\u0456 \u043f\u043e\u0447\u0438\u043d\u0430\u0442\u0438\u0441\u044f (name,\n           seo_title, seo_description) \n\n  - **409**: Error: Conflict.\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041f\u043e\u043b\u0435 name \u043f\u043e\u0432\u0438\u043d\u043d\u043e \u0431\u0443\u0442\u0438 \u0443\u043d\u0456\u043a\u0430\u043b\u044c\u043d\u0438\u043c. \u0426\u044f \u043d\u0430\u0437\u0432\u0430 \u0432\u0436\u0435 \u0437\u0430\u0439\u043d\u044f\u0442\u0430\n  - **422**: Error: Unprocessable Entity. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 name 60 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n        3) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 seo_title 60 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n        4) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 seo_description 160 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n  - **500**: Internal server error if an unexpected error occurs.\n\n\nOperations with gallery items:\n - Delete \n\n     1. Be sure to specify the id field \n\n     2. Be sure to specify the field delete=true \n\n - Update \n\n     1. Be sure to specify the id field \n\n     2. Be sure to specify the field delete=false \n\n     3. Be sure to specify the image field \n\n         a) required image if filename is specified. Format base64(svg,png,jpg,jpeg,webp) \n\n         b) filename is required if image is specified. Example: *filename.png* \n\n         c) optional alt. If you don't specify it, I'll take the value from filename \n\n - Create:\n     1. Do not specify the id field \n\n     3. Be sure to specify the image field \n\n         a) required image if filename is specified. Format base64(svg,png,jpg,jpeg,webp) \n\n         b) filename is required if image is specified. Example: *filename.png* \n\n         c) optional alt. If you don't specify it, I'll take the value from filename \n\n     4. Be sure to specify the field delete=false ", "tags": ["pages"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PageInSchema"}}}, "required": true}, "security": [{"CustomJWTAuth": []}]}}, "/api/page/{pg_slug}/": {"patch": {"operationId": "update_page", "summary": "Update Page", "parameters": [{"in": "path", "name": "pg_slug", "schema": {"title": "Pg Slug", "type": "string"}, "required": true}, {"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessageOutSchema"}}}}, "403": {"description": "Error: Forbidden"}, "404": {"description": "Error: Not Found"}, "409": {"description": "Error: Conflict"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Update page.\n\nPlease provide:\n  - **body**  body for creating new page\n\nReturns\n  - **200**: Success response with the data.\n  - **403**: Error: Forbidden. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041d\u0435\u0434\u0456\u0439\u0441\u043d\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f (\u043d\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0435 \u0432\u0435\u043b\u0438\u043a\u0438\u043c\u0438 \u043b\u0456\u0442\u0435\u0440\u0430\u043c\u0438).\n           \u0417 \u0432\u0435\u043b\u0438\u043a\u0438\u0445 \u043b\u0456\u0442\u0435\u0440 \u043f\u043e\u0432\u0438\u043d\u043d\u0456 \u043f\u043e\u0447\u0438\u043d\u0430\u0442\u0438\u0441\u044f (name,\n           seo_title, seo_description) \n\n  - **409**: Error: Conflict. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041f\u043e\u043b\u0435 name \u043f\u043e\u0432\u0438\u043d\u043d\u043e \u0431\u0443\u0442\u0438 \u0443\u043d\u0456\u043a\u0430\u043b\u044c\u043d\u0438\u043c. \u0426\u044f \u043d\u0430\u0437\u0432\u0430 \u0432\u0436\u0435 \u0437\u0430\u0439\u043d\u044f\u0442\u0430\n  - **422**: Error: Unprocessable Entity. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 name 60 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n        3) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 seo_title 60 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n        4) \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 seo_description 160 \u0441\u0438\u043c\u0432\u043e\u043b\u0456\u0432 \n\n  - **500**: Internal server error if an unexpected error occurs.\n\n\nOperations with gallery items:\n - Delete \n\n     1. Be sure to specify the id field \n\n     2. Be sure to specify the field delete=true \n\n - Update \n\n     1. Be sure to specify the id field \n\n     2. Be sure to specify the field delete=false \n\n     3. Be sure to specify the image field \n\n         a) required image if filename is specified. Format base64(svg,png,jpg,jpeg,webp) \n\n         b) filename is required if image is specified. Example: *filename.png* \n\n         c) optional alt. If you don't specify it, I'll take the value from filename \n\n - Create:\n     1. Do not specify the id field \n\n     3. Be sure to specify the image field \n\n         a) required image if filename is specified. Format base64(svg,png,jpg,jpeg,webp) \n\n         b) filename is required if image is specified. Example: *filename.png* \n\n         c) optional alt. If you don't specify it, I'll take the value from filename \n\n     4. Be sure to specify the field delete=false ", "tags": ["pages"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PageUpdateSchema"}}}, "required": true}, "security": [{"CustomJWTAuth": []}]}, "get": {"operationId": "get_page_by_slug", "summary": "Get Page By Slug", "parameters": [{"in": "path", "name": "pg_slug", "schema": {"title": "Pg Slug", "type": "string"}, "required": true}, {"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PageOutSchema"}}}}, "404": {"description": "Error: Not Found"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Create page.\n\nPlease provide:\n  - **pg_slug**  slug of page\n\nReturns:\n  - **200**: Success response with the data.\n  - **404**: Error: Forbidden. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041d\u0435 \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u043e: \u043d\u0435\u043c\u0430\u0454 \u0437\u0431\u0456\u0433\u0456\u0432 \u0441\u0442\u043e\u0440\u0456\u043d\u043e\u043a\n           \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0437\u0430\u043f\u0438\u0442\u0456. \n\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["pages"], "security": [{"CustomJWTAuth": []}]}, "delete": {"operationId": "delete_page_by_slug", "summary": "Delete Page By Slug", "parameters": [{"in": "path", "name": "pg_slug", "schema": {"title": "Pg Slug", "type": "string"}, "required": true}, {"in": "header", "name": "Accept-Language", "schema": {"allOf": [{"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}], "default": "uk"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessageOutSchema"}}}}, "404": {"description": "Error: Not Found"}, "422": {"description": "Error: Unprocessable Entity"}, "500": {"description": "Internal server error if an unexpected error occurs."}}, "description": "Delete page by slug.\n\nPlease provide:\n  - **pg_slug**  slug of page\n\nReturns:\n  - **200**: Success response with the data. \n\n  - **409**: Error: Conflict. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u0426\u044e \u0441\u0442\u043e\u0440\u0456\u043d\u043a\u0443 \u0437\u0430\u0431\u043e\u0440\u043e\u043d\u0435\u043d\u043e \u0432\u0438\u0434\u0430\u043b\u044f\u0442\u0438. \n\n  - **404**: Error: Forbidden. \n\n    \u041f\u0440\u0438\u0447\u0438\u043d\u0438: \n\n        1) \u041d\u0435 \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u043e: \u043d\u0435\u043c\u0430\u0454 \u0437\u0431\u0456\u0433\u0456\u0432 \u0441\u0442\u043e\u0440\u0456\u043d\u043e\u043a\n           \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0437\u0430\u043f\u0438\u0442\u0456. \n\n  - **500**: Internal server error if an unexpected error occurs.", "tags": ["pages"], "security": [{"CustomJWTAuth": []}]}}}, "components": {"schemas": {"LangEnum": {"enum": ["uk", "ru"], "title": "LangEnum", "type": "string"}, "LoginResponseSchema": {"description": "Pydantic schema for return message to client side.\n\nPurpose of this schema just say that operation\nhas been successful or failed", "properties": {"email": {"maxLength": 255, "title": "Email", "type": "string"}, "refresh": {"title": "Refresh", "type": "string"}, "access": {"title": "Access", "type": "string"}, "admin": {"title": "Admin", "type": "boolean"}}, "required": ["email", "refresh", "access", "admin"], "title": "LoginResponseSchema", "type": "object"}, "LoginSchema": {"description": "Pydantic schema for return message to client side.\n\nPurpose of this schema just say that operation\nhas been successful or failed", "properties": {"password": {"title": "Password", "type": "string"}, "email": {"format": "email", "title": "Email", "type": "string"}}, "required": ["password", "email"], "title": "LoginSchema", "type": "object"}, "Schema": {"properties": {}, "title": "Schema", "type": "object"}, "TokenBlacklistInputSchema": {"properties": {"refresh": {"title": "Refresh", "type": "string"}}, "required": ["refresh"], "title": "TokenBlacklistInputSchema", "type": "object"}, "TokenRefreshOutputSchema": {"properties": {"refresh": {"title": "Refresh", "type": "string"}, "access": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Access"}}, "required": ["refresh", "access"], "title": "TokenRefreshOutputSchema", "type": "object"}, "TokenRefreshInputSchema": {"properties": {"refresh": {"title": "Refresh", "type": "string"}}, "required": ["refresh"], "title": "TokenRefreshInputSchema", "type": "object"}, "MessageOutSchema": {"description": "Pydantic schema for return message to client side.\n\nPurpose of this schema just say that operation\nhas been successful or failed", "properties": {"detail": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Detail"}}, "required": ["detail"], "title": "MessageOutSchema", "type": "object"}, "CityEnum": {"enum": ["\u0456\u043d\u0448\u0435", "\u043a\u0438\u0457\u0432", "\u0445\u0430\u0440\u043a\u0456\u0432", "\u043e\u0434\u0435\u0441\u0430", "\u0434\u043d\u0456\u043f\u0440\u043e", "\u0434\u043e\u043d\u0435\u0446\u044c\u043a", "\u0437\u0430\u043f\u043e\u0440\u0456\u0436\u0436\u044f", "\u043b\u044c\u0432\u0456\u0432", "\u043a\u0440\u0438\u0432\u0438\u0439 \u0440\u0456\u0433", "\u043c\u0438\u043a\u043e\u043b\u0430\u0457\u0432", "\u0432\u0456\u043d\u043d\u0438\u0446\u044f", "\u043b\u0443\u0433\u0430\u043d\u0441\u044c\u043a", "\u0441\u0456\u043c\u0444\u0435\u0440\u043e\u043f\u043e\u043b\u044c", "\u0445\u0435\u0440\u0441\u043e\u043d", "\u043f\u043e\u043b\u0442\u0430\u0432\u0430", "\u0447\u0435\u0440\u043d\u0456\u0433\u0456\u0432", "\u0447\u0435\u0440\u043a\u0430\u0441\u0438", "\u0436\u0438\u0442\u043e\u043c\u0438\u0440", "\u0441\u0443\u043c\u0438", "\u0445\u043c\u0435\u043b\u044c\u043d\u0438\u0446\u044c\u043a\u0438\u0439", "\u0447\u0435\u0440\u043d\u0456\u0432\u0446\u0456", "\u0440\u0456\u0432\u043d\u0435", "\u0456\u0432\u0430\u043d\u043e-\u0444\u0440\u0430\u043d\u043a\u0456\u0432\u0441\u044c\u043a", "\u0442\u0435\u0440\u043d\u043e\u043f\u0456\u043b\u044c", "\u043b\u0443\u0446\u044c\u043a"], "title": "CityEnum", "type": "string"}, "UserRegisterSchema": {"description": "Pydantic schema for User.\n\nPurpose of this schema to get user's\npersonal data for registration", "properties": {"first_name": {"description": "", "maxLength": 255, "title": "First Name", "type": "string"}, "last_name": {"description": "", "maxLength": 255, "title": "Last Name", "type": "string"}, "nickname": {"description": "", "maxLength": 255, "title": "Nickname", "type": "string"}, "man": {"description": "", "title": "Man", "type": "boolean"}, "phone_number": {"description": "", "maxLength": 128, "title": "Phone Number", "type": "string"}, "email": {"description": "", "format": "email", "title": "Email", "type": "string"}, "address": {"description": "", "maxLength": 255, "title": "Address", "type": "string"}, "city": {"allOf": [{"$ref": "#/components/schemas/CityEnum"}], "description": "", "title": "City"}, "birthday": {"description": "", "format": "date", "title": "Birthday", "type": "string"}, "password1": {"format": "password", "title": "Password1", "type": "string", "writeOnly": true}, "password2": {"format": "password", "title": "Password2", "type": "string", "writeOnly": true}}, "required": ["first_name", "last_name", "nickname", "man", "phone_number", "email", "address", "city", "birthday", "password1", "password2"], "title": "UserRegisterSchema", "type": "object"}, "DynamicInput": {"properties": {"page": {"default": 1, "exclusiveMinimum": 0, "title": "Page", "type": "integer"}, "page_size": {"default": 100, "exclusiveMaximum": 200, "title": "Page Size", "type": "integer"}}, "title": "DynamicInput", "type": "object"}, "PaginatedResponseSchema_List_": {"properties": {"count": {"title": "Count", "type": "integer"}, "next": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Next"}, "previous": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Previous"}, "results": {"items": {"items": {}, "type": "array"}, "title": "Results", "type": "array"}}, "required": ["count", "next", "previous", "results"], "title": "PaginatedResponseSchema[List]", "type": "object"}, "UserOutSchema": {"description": "Pydantic schema for User.\n\nPurpose of this schema to return user's\npersonal data", "properties": {"city_display": {"title": "City Display", "type": "string"}, "id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "ID"}, "first_name": {"maxLength": 255, "title": "First Name", "type": "string"}, "last_name": {"maxLength": 255, "title": "Last Name", "type": "string"}, "nickname": {"maxLength": 255, "title": "Nickname", "type": "string"}, "city": {"maxLength": 255, "title": "City", "type": "string"}, "man": {"title": "Man", "type": "boolean"}, "phone_number": {"maxLength": 128, "title": "Phone Number", "type": "string"}, "email": {"maxLength": 255, "title": "Email", "type": "string"}, "address": {"maxLength": 255, "title": "Address", "type": "string"}, "is_superuser": {"default": false, "description": "\u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u0447\u0442\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0438\u043c\u0435\u0435\u0442 \u0432\u0441\u0435 \u043f\u0440\u0430\u0432\u0430 \u0431\u0435\u0437 \u044f\u0432\u043d\u043e\u0433\u043e \u0438\u0445 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f.", "title": "\u0421\u0442\u0430\u0442\u0443\u0441 \u0421\u0443\u043f\u0435\u0440\u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0430", "type": "boolean"}, "birthday": {"format": "date", "title": "Birthday", "type": "string"}}, "required": ["city_display", "first_name", "last_name", "nickname", "city", "man", "phone_number", "email", "address", "birthday"], "title": "UserOutSchema", "type": "object"}, "UserUpdateSchema": {"description": "Pydantic schema for update User.\n\nPurpose of this schema to get user's\npersonal data for updating", "properties": {"first_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "First Name"}, "last_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Last Name"}, "nickname": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Nickname"}, "man": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "description": "", "title": "Man"}, "phone_number": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Phone Number"}, "email": {"anyOf": [{"format": "email", "type": "string"}, {"type": "null"}], "description": "", "title": "Email"}, "address": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Address"}, "city": {"anyOf": [{"$ref": "#/components/schemas/CityEnum"}, {"type": "null"}], "description": "", "title": "City"}, "birthday": {"anyOf": [{"format": "date", "type": "string"}, {"type": "null"}], "description": "", "title": "Birthday"}, "password": {"format": "password", "title": "Password", "type": "string", "writeOnly": true}}, "title": "UserUpdateSchema", "type": "object"}, "DirectionEnum": {"enum": ["ascending", "descending"], "title": "DirectionEnum", "type": "string"}, "UserFieldsEnum": {"enum": ["id", "date_joined", "birthday", "email", "phone_number", "fio", "nickname", "city"], "title": "UserFieldsEnum", "type": "string"}, "PaginatedResponseSchema_UserOutSchema_": {"properties": {"count": {"title": "Count", "type": "integer"}, "next": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Next"}, "previous": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Previous"}, "results": {"items": {"$ref": "#/components/schemas/UserOutSchema"}, "title": "Results", "type": "array"}}, "required": ["count", "next", "previous", "results"], "title": "PaginatedResponseSchema[UserOutSchema]", "type": "object"}, "MailTemplateOutSchema": {"description": "Pydantic schema for MailTemplate.\n\nPurpose of this schema to return mail template data", "properties": {"id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "ID"}, "name": {"maxLength": 255, "title": "Name", "type": "string"}}, "required": ["name"], "title": "MailTemplateOutSchema", "type": "object"}, "MailingInSchema": {"description": "Pydantic schema for mailing.\n\nPurpose of this schema to make mailing", "properties": {"user_ids": {"items": {"type": "integer"}, "title": "User Ids", "type": "array"}, "temp_id": {"title": "Temp Id", "type": "integer"}}, "required": ["temp_id"], "title": "MailingInSchema", "type": "object"}, "TaskInfoOutSchema": {"description": "Pydantic schema for getting task info.\n\nPurpose of this schema to get task info", "properties": {"progress": {"title": "Progress", "type": "integer"}}, "required": ["progress"], "title": "TaskInfoOutSchema", "type": "object"}, "GalleryItemOutSchema": {"description": "Pydantic schema for return gallery images to client side.", "properties": {"image": {"title": "Image", "type": "string"}, "image_webp": {"title": "Image Webp", "type": "string"}, "id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "ID"}, "alt": {"maxLength": 60, "title": "Alt", "type": "string"}}, "required": ["image", "image_webp", "alt"], "title": "GalleryItemOutSchema", "type": "object"}, "CinemaCardOutSchema": {"description": "Pydantic schema for showing cinema card.", "properties": {"banner": {"$ref": "#/components/schemas/ImageOutSchema"}, "name": {"maxLength": 100, "title": "Name", "type": "string"}, "slug": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Slug"}}, "required": ["banner", "name"], "title": "CinemaCardOutSchema", "type": "object"}, "ImageOutSchema": {"description": "Pydantic schema for return image to client side.", "properties": {"image": {"title": "Image", "type": "string"}, "image_webp": {"title": "Image Webp", "type": "string"}, "alt": {"maxLength": 60, "title": "Alt", "type": "string"}}, "required": ["image", "image_webp", "alt"], "title": "ImageOutSchema", "type": "object"}, "PaginatedResponseSchema_CinemaCardOutSchema_": {"properties": {"count": {"title": "Count", "type": "integer"}, "next": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Next"}, "previous": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Previous"}, "results": {"items": {"$ref": "#/components/schemas/CinemaCardOutSchema"}, "title": "Results", "type": "array"}}, "required": ["count", "next", "previous", "results"], "title": "PaginatedResponseSchema[CinemaCardOutSchema]", "type": "object"}, "CinemaInSchema": {"description": "Pydantic schema for creating cinemas to server side.", "properties": {"seo_title": {"description": "", "maxLength": 60, "title": "Seo Title", "type": "string"}, "seo_description": {"description": "", "maxLength": 160, "title": "Seo Description", "type": "string"}, "seo_image": {"$ref": "#/components/schemas/ImageInSchema"}, "name_uk": {"maxLength": 100, "title": "Name Uk", "type": "string"}, "name_ru": {"maxLength": 100, "title": "Name Ru", "type": "string"}, "description_uk": {"maxLength": 2000, "title": "Description Uk", "type": "string"}, "description_ru": {"maxLength": 2000, "title": "Description Ru", "type": "string"}, "terms_uk": {"contentMediaType": "application/json", "contentSchema": {}, "title": "Terms Uk", "type": "string"}, "terms_ru": {"contentMediaType": "application/json", "contentSchema": {}, "title": "Terms Ru", "type": "string"}, "phone_1": {"description": "", "maxLength": 128, "title": "Phone 1", "type": "string"}, "phone_2": {"description": "", "maxLength": 128, "title": "Phone 2", "type": "string"}, "email": {"description": "", "format": "email", "title": "Email", "type": "string"}, "banner": {"$ref": "#/components/schemas/ImageInSchema"}, "logo": {"$ref": "#/components/schemas/ImageInSchema"}, "address_uk": {"maxLength": 2000, "title": "Address Uk", "type": "string"}, "address_ru": {"maxLength": 2000, "title": "Address Ru", "type": "string"}, "coordinate": {"description": "", "format": "uri", "minLength": 1, "title": "Coordinate", "type": "string"}, "gallery": {"items": {"$ref": "#/components/schemas/ImageInSchema"}, "title": "Gallery", "type": "array"}}, "required": ["seo_title", "seo_description", "seo_image", "name_uk", "name_ru", "description_uk", "description_ru", "terms_uk", "terms_ru", "phone_1", "phone_2", "email", "banner", "logo", "address_uk", "address_ru", "coordinate"], "title": "CinemaInSchema", "type": "object"}, "ImageInSchema": {"description": "Pydantic schema for uploading image to server side.", "properties": {"alt": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Alt"}, "image": {"title": "Image", "type": "string"}, "filename": {"title": "Filename", "type": "string"}}, "required": ["image", "filename"], "title": "ImageInSchema", "type": "object"}, "CinemaUpdateSchema": {"description": "Pydantic schema for updating cinema.", "properties": {"seo_title": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Seo Title"}, "seo_description": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Seo Description"}, "seo_image": {"allOf": [{"$ref": "#/components/schemas/ImageUpdateSchema"}]}, "name_uk": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Name [Uk]"}, "name_ru": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Name [Ru]"}, "description_uk": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Description [Uk]"}, "description_ru": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Description [Ru]"}, "terms_uk": {"anyOf": [{"contentMediaType": "application/json", "contentSchema": {}, "type": "string"}, {"type": "null"}], "description": "", "title": "Terms [Uk]"}, "terms_ru": {"anyOf": [{"contentMediaType": "application/json", "contentSchema": {}, "type": "string"}, {"type": "null"}], "description": "", "title": "Terms [Ru]"}, "phone_1": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Phone 1"}, "phone_2": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Phone 2"}, "email": {"anyOf": [{"format": "email", "type": "string"}, {"type": "null"}], "description": "", "title": "Email"}, "banner": {"allOf": [{"$ref": "#/components/schemas/ImageUpdateSchema"}]}, "logo": {"allOf": [{"$ref": "#/components/schemas/ImageUpdateSchema"}]}, "address_uk": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Address [Uk]"}, "address_ru": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Address [Ru]"}, "coordinate": {"anyOf": [{"format": "uri", "minLength": 1, "type": "string"}, {"type": "null"}], "description": "", "title": "Coordinate"}, "gallery": {"items": {"$ref": "#/components/schemas/GalleryItemSchema"}, "title": "Gallery", "type": "array"}}, "title": "CinemaUpdateSchema", "type": "object"}, "GalleryItemSchema": {"description": "Pydantic schema for uploading image to server side.", "properties": {"id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "description": "", "title": "Id"}, "alt": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Alt"}, "image": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Image"}, "delete": {"title": "Delete", "type": "boolean"}, "filename": {"title": "Filename", "type": "string"}}, "required": ["delete"], "title": "GalleryItemSchema", "type": "object"}, "ImageUpdateSchema": {"description": "Pydantic schema for updating image.", "properties": {"alt": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Alt"}, "image": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Image"}, "filename": {"title": "Filename", "type": "string"}}, "title": "ImageUpdateSchema", "type": "object"}, "CinemaOutSchema": {"description": "Pydantic schema for showing cinema full data.", "properties": {"banner": {"$ref": "#/components/schemas/ImageOutSchema"}, "logo": {"$ref": "#/components/schemas/ImageOutSchema"}, "seo_image": {"$ref": "#/components/schemas/ImageOutSchema"}, "seo_title": {"maxLength": 60, "title": "Seo Title", "type": "string"}, "seo_description": {"maxLength": 160, "title": "Seo Description", "type": "string"}, "name_uk": {"anyOf": [{"maxLength": 100, "type": "string"}, {"type": "null"}], "title": "Name [Uk]"}, "name_ru": {"anyOf": [{"maxLength": 100, "type": "string"}, {"type": "null"}], "title": "Name [Ru]"}, "description_uk": {"anyOf": [{"maxLength": 20000, "type": "string"}, {"type": "null"}], "title": "Description [Uk]"}, "description_ru": {"anyOf": [{"maxLength": 20000, "type": "string"}, {"type": "null"}], "title": "Description [Ru]"}, "terms_uk": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Terms [Uk]"}, "terms_ru": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Terms [Ru]"}, "phone_1": {"maxLength": 128, "title": "Phone 1", "type": "string"}, "phone_2": {"maxLength": 128, "title": "Phone 2", "type": "string"}, "email": {"maxLength": 254, "title": "Email", "type": "string"}, "address_uk": {"anyOf": [{"maxLength": 2000, "type": "string"}, {"type": "null"}], "title": "Address [Uk]"}, "address_ru": {"anyOf": [{"maxLength": 2000, "type": "string"}, {"type": "null"}], "title": "Address [Ru]"}, "coordinate": {"maxLength": 2000, "title": "Coordinate", "type": "string"}, "gallery": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Gallery"}}, "required": ["banner", "logo", "seo_image", "seo_title", "seo_description", "phone_1", "phone_2", "email", "coordinate"], "title": "CinemaOutSchema", "type": "object"}, "MovieParticipantOutSchema": {"description": "Pydantic schema for getting\nall movie participants in system.", "properties": {"display": {"title": "Display", "type": "string"}, "id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "ID"}}, "required": ["display"], "title": "MovieParticipantOutSchema", "type": "object"}, "PaginatedResponseSchema_MovieParticipantOutSchema_": {"properties": {"count": {"title": "Count", "type": "integer"}, "next": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Next"}, "previous": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Previous"}, "results": {"items": {"$ref": "#/components/schemas/MovieParticipantOutSchema"}, "title": "Results", "type": "array"}}, "required": ["count", "next", "previous", "results"], "title": "PaginatedResponseSchema[MovieParticipantOutSchema]", "type": "object"}, "ReleaseEnum": {"enum": ["soon", "current"], "title": "ReleaseEnum", "type": "string"}, "MovieCardOutSchema": {"description": "Pydantic schema for showing Movie card.", "properties": {"card_img": {"$ref": "#/components/schemas/ImageOutSchema"}, "name": {"maxLength": 60, "title": "Name", "type": "string"}, "legal_age": {"default": "+0", "title": "Legal Age", "type": "string"}, "released": {"format": "date", "title": "Released", "type": "string"}, "slug": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Slug"}}, "required": ["card_img", "name", "released"], "title": "MovieCardOutSchema", "type": "object"}, "PaginatedResponseSchema_MovieCardOutSchema_": {"properties": {"count": {"title": "Count", "type": "integer"}, "next": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Next"}, "previous": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Previous"}, "results": {"items": {"$ref": "#/components/schemas/MovieCardOutSchema"}, "title": "Results", "type": "array"}}, "required": ["count", "next", "previous", "results"], "title": "PaginatedResponseSchema[MovieCardOutSchema]", "type": "object"}, "CountryEnum": {"enumtitle": "CountryEnum", "type": "string"}, "GenresEnum": {"enum": ["comedy", "fantasy", "horror", "action", "melodramas", "thriller", "mysticism", "detective"], "title": "GenresEnum", "type": "string"}, "LegalAgeEnum": {"enum": ["+0", "+6", "+12", "+16", "+18"], "title": "LegalAgeEnum", "type": "string"}, "MovieInSchema": {"description": "Pydantic schema for creating Movies to server side.", "properties": {"seo_title": {"description": "", "maxLength": 60, "title": "Seo Title", "type": "string"}, "seo_description": {"description": "", "maxLength": 160, "title": "Seo Description", "type": "string"}, "seo_image": {"$ref": "#/components/schemas/ImageInSchema"}, "name_uk": {"maxLength": 60, "title": "Name Uk", "type": "string"}, "name_ru": {"maxLength": 60, "title": "Name Ru", "type": "string"}, "description_uk": {"maxLength": 2000, "title": "Description Uk", "type": "string"}, "description_ru": {"maxLength": 2000, "title": "Description Ru", "type": "string"}, "card_img": {"$ref": "#/components/schemas/ImageInSchema"}, "trailer_link": {"description": "", "format": "uri", "minLength": 1, "title": "Trailer Link", "type": "string"}, "year": {"description": "", "title": "Year", "type": "integer"}, "budget": {"description": "", "title": "Budget", "type": "integer"}, "legal_age": {"allOf": [{"$ref": "#/components/schemas/LegalAgeEnum"}], "default": "+0", "description": "", "title": "Legal Age"}, "duration": {"description": "", "format": "duration", "title": "Duration", "type": "string"}, "released": {"description": "", "format": "date", "title": "Released", "type": "string"}, "techs": {"items": {"$ref": "#/components/schemas/TechsEnum"}, "title": "Techs", "type": "array"}, "genres": {"items": {"$ref": "#/components/schemas/GenresEnum"}, "title": "Genres", "type": "array"}, "countries": {"items": {"$ref": "#/components/schemas/CountryEnum"}, "title": "Countries", "type": "array"}, "gallery": {"items": {"$ref": "#/components/schemas/ImageInSchema"}, "title": "Gallery", "type": "array"}, "participants": {"description": "", "items": {"type": "integer"}, "title": "Participants", "type": "array"}}, "required": ["seo_title", "seo_description", "seo_image", "name_uk", "name_ru", "description_uk", "description_ru", "card_img", "trailer_link", "year", "budget", "duration", "released", "techs", "genres", "countries", "participants"], "title": "MovieInSchema", "type": "object"}, "TechsEnum": {"enum": ["3d", "2d", "imax", "4dx.json", "5d"], "title": "TechsEnum", "type": "string"}, "MovieUpdateSchema": {"description": "Pydantic schema for updating Movie.", "properties": {"seo_title": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Seo Title"}, "seo_description": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Seo Description"}, "seo_image": {"allOf": [{"$ref": "#/components/schemas/ImageUpdateSchema"}]}, "name_uk": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Name [Uk]"}, "name_ru": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Name [Ru]"}, "description_uk": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Description [Uk]"}, "description_ru": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Description [Ru]"}, "card_img": {"allOf": [{"$ref": "#/components/schemas/ImageUpdateSchema"}]}, "trailer_link": {"anyOf": [{"format": "uri", "minLength": 1, "type": "string"}, {"type": "null"}], "description": "", "title": "Trailer Link"}, "year": {"anyOf": [{"type": "integer"}, {"type": "null"}], "description": "", "title": "Year"}, "budget": {"anyOf": [{"type": "integer"}, {"type": "null"}], "description": "", "title": "Budget"}, "legal_age": {"allOf": [{"$ref": "#/components/schemas/LegalAgeEnum"}], "default": "+0", "description": "", "title": "Legal Age"}, "duration": {"anyOf": [{"format": "duration", "type": "string"}, {"type": "null"}], "description": "", "title": "Duration"}, "released": {"anyOf": [{"format": "date", "type": "string"}, {"type": "null"}], "description": "", "title": "Released"}, "techs": {"items": {"$ref": "#/components/schemas/TechsEnum"}, "title": "Techs", "type": "array"}, "genres": {"items": {"$ref": "#/components/schemas/GenresEnum"}, "title": "Genres", "type": "array"}, "countries": {"items": {"$ref": "#/components/schemas/CountryEnum"}, "title": "Countries", "type": "array"}, "gallery": {"items": {"$ref": "#/components/schemas/GalleryItemSchema"}, "title": "Gallery", "type": "array"}, "participants": {"anyOf": [{"items": {"type": "integer"}, "type": "array"}, {"type": "null"}], "description": "", "title": "Participants"}}, "title": "MovieUpdateSchema", "type": "object"}, "MovieOutSchema": {"description": "Pydantic schema for showing Movie full data.", "properties": {"card_img": {"$ref": "#/components/schemas/ImageOutSchema"}, "seo_image": {"$ref": "#/components/schemas/ImageOutSchema"}, "genres_display": {"title": "Genres Display", "type": "string"}, "genres": {"items": {"type": "string"}, "title": "Genres", "type": "array"}, "techs": {"items": {"type": "string"}, "title": "Techs", "type": "array"}, "countries": {"items": {"type": "string"}, "title": "Countries", "type": "array"}, "countries_display": {"title": "Countries Display", "type": "string"}, "techs_display": {"title": "Techs Display", "type": "string"}, "name_uk": {"anyOf": [{"maxLength": 60, "type": "string"}, {"type": "null"}], "title": "Name [Uk]"}, "name_ru": {"anyOf": [{"maxLength": 60, "type": "string"}, {"type": "null"}], "title": "Name [Ru]"}, "description_uk": {"anyOf": [{"maxLength": 20000, "type": "string"}, {"type": "null"}], "title": "Description [Uk]"}, "description_ru": {"anyOf": [{"maxLength": 20000, "type": "string"}, {"type": "null"}], "title": "Description [Ru]"}, "gallery": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Gallery"}, "slug": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Slug"}, "duration": {"format": "duration", "title": "Duration", "type": "string"}, "legal_age": {"default": "+0", "title": "Legal Age", "type": "string"}, "trailer_link": {"title": "Trailer Link", "type": "string"}, "year": {"title": "Year", "type": "integer"}, "released": {"format": "date", "title": "Released", "type": "string"}, "budget": {"title": "Budget", "type": "integer"}, "participants": {"items": {"type": "integer"}, "title": "Participants", "type": "array"}, "seo_title": {"maxLength": 60, "title": "Seo Title", "type": "string"}, "seo_description": {"maxLength": 160, "title": "Seo Description", "type": "string"}}, "required": ["card_img", "seo_image", "genres_display", "genres", "techs", "countries", "countries_display", "techs_display", "duration", "trailer_link", "year", "released", "budget", "participants", "seo_title", "seo_description"], "title": "MovieOutSchema", "type": "object"}, "HallCardOutSchema": {"description": "Pydantic schema for showing hall card.", "properties": {"number": {"maxLength": 60, "title": "Number", "type": "string"}, "date_created": {"format": "date-time", "title": "Date Created", "type": "string"}, "id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "ID"}}, "required": ["number", "date_created"], "title": "HallCardOutSchema", "type": "object"}, "PaginatedResponseSchema_HallCardOutSchema_": {"properties": {"count": {"title": "Count", "type": "integer"}, "next": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Next"}, "previous": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Previous"}, "results": {"items": {"$ref": "#/components/schemas/HallCardOutSchema"}, "title": "Results", "type": "array"}}, "required": ["count", "next", "previous", "results"], "title": "PaginatedResponseSchema[HallCardOutSchema]", "type": "object"}, "HallInSchema": {"description": "Pydantic schema for creating halls to server side.", "properties": {"seo_title": {"description": "", "maxLength": 60, "title": "Seo Title", "type": "string"}, "seo_description": {"description": "", "maxLength": 160, "title": "Seo Description", "type": "string"}, "seo_image": {"$ref": "#/components/schemas/ImageInSchema"}, "number": {"description": "", "maxLength": 60, "title": "Number", "type": "string"}, "description_uk": {"maxLength": 2000, "title": "Description Uk", "type": "string"}, "description_ru": {"maxLength": 2000, "title": "Description Ru", "type": "string"}, "banner": {"$ref": "#/components/schemas/ImageInSchema"}, "gallery": {"items": {"$ref": "#/components/schemas/ImageInSchema"}, "title": "Gallery", "type": "array"}, "tech": {"allOf": [{"$ref": "#/components/schemas/TechEnum"}], "description": "", "title": "Tech"}}, "required": ["seo_title", "seo_description", "seo_image", "number", "description_uk", "description_ru", "banner", "tech"], "title": "HallInSchema", "type": "object"}, "TechEnum": {"enum": ["3d", "2d", "imax", "4dx.json", "5d"], "title": "TechEnum", "type": "string"}, "HallUpdateSchema": {"description": "Pydantic schema for updating hall.", "properties": {"seo_title": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Seo Title"}, "seo_description": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Seo Description"}, "seo_image": {"allOf": [{"$ref": "#/components/schemas/ImageUpdateSchema"}]}, "number": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Number"}, "description_uk": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Description [Uk]"}, "description_ru": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Description [Ru]"}, "banner": {"allOf": [{"$ref": "#/components/schemas/ImageUpdateSchema"}]}, "gallery": {"items": {"$ref": "#/components/schemas/GalleryItemSchema"}, "title": "Gallery", "type": "array"}, "tech": {"allOf": [{"$ref": "#/components/schemas/TechEnum"}], "description": "", "title": "Tech"}}, "required": ["tech"], "title": "HallUpdateSchema", "type": "object"}, "HallOutSchema": {"description": "Pydantic schema for showing hall full data.", "properties": {"banner": {"$ref": "#/components/schemas/ImageOutSchema"}, "seo_image": {"$ref": "#/components/schemas/ImageOutSchema"}, "tech_display": {"title": "Tech Display", "type": "string"}, "number": {"maxLength": 60, "title": "Number", "type": "string"}, "description_uk": {"anyOf": [{"maxLength": 20000, "type": "string"}, {"type": "null"}], "title": "Description [Uk]"}, "description_ru": {"anyOf": [{"maxLength": 20000, "type": "string"}, {"type": "null"}], "title": "Description [Ru]"}, "gallery": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Gallery"}, "id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "ID"}, "tech": {"maxLength": 25, "title": "Tech", "type": "string"}, "seo_title": {"maxLength": 60, "title": "Seo Title", "type": "string"}, "seo_description": {"maxLength": 160, "title": "Seo Description", "type": "string"}}, "required": ["banner", "seo_image", "tech_display", "number", "tech", "seo_title", "seo_description"], "title": "HallOutSchema", "type": "object"}, "SpeedEnum": {"enum": [3, 4, 5, 6, 7, 8, 9, 10, 20, 30], "title": "SpeedEnum", "type": "integer"}, "TopSliderItemUpdateSchema": {"description": "Pydantic schema for updating or creating TopSliderItem.", "properties": {"id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "description": "", "title": "Id"}, "url": {"anyOf": [{"format": "uri", "minLength": 1, "type": "string"}, {"type": "null"}], "description": "", "title": "Url"}, "text_uk": {"anyOf": [{"maxLength": 40, "type": "string"}, {"type": "null"}], "description": "", "title": "Text [Uk]"}, "text_ru": {"anyOf": [{"maxLength": 40, "type": "string"}, {"type": "null"}], "description": "", "title": "Text [Ru]"}, "image": {"allOf": [{"$ref": "#/components/schemas/ImageUpdateSchema"}]}, "delete": {"title": "Delete", "type": "boolean"}}, "required": ["delete"], "title": "TopSliderItemUpdateSchema", "type": "object"}, "TopSliderUpdateSchema": {"description": "Pydantic schema for updating TopSlider.", "properties": {"active": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "description": "", "title": "Active"}, "speed": {"allOf": [{"$ref": "#/components/schemas/SpeedEnum"}], "default": 30, "description": "", "title": "Speed"}, "items": {"items": {"$ref": "#/components/schemas/TopSliderItemUpdateSchema"}, "title": "Items", "type": "array"}}, "title": "TopSliderUpdateSchema", "type": "object"}, "TopSliderItemOutSchema": {"description": "Pydantic schema for getting Top slider items.", "properties": {"image": {"$ref": "#/components/schemas/ImageOutSchema"}, "id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "ID"}, "url": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Url"}, "text_uk": {"anyOf": [{"maxLength": 40, "type": "string"}, {"type": "null"}], "title": "Text [Uk]"}, "text_ru": {"anyOf": [{"maxLength": 40, "type": "string"}, {"type": "null"}], "title": "Text [Ru]"}}, "required": ["image"], "title": "TopSliderItemOutSchema", "type": "object"}, "TopSliderOutSchema": {"description": "Pydantic schema for getting Top slider.", "properties": {"items": {"items": {"$ref": "#/components/schemas/TopSliderItemOutSchema"}, "title": "Items", "type": "array"}, "speed": {"default": 30, "title": "Speed", "type": "integer"}, "active": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Active"}}, "required": ["items"], "title": "TopSliderOutSchema", "type": "object"}, "BottomSliderItemUpdateSchema": {"description": "Pydantic schema for updating or creating BottomSliderItem.", "properties": {"id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "description": "", "title": "Id"}, "url": {"anyOf": [{"format": "uri", "minLength": 1, "type": "string"}, {"type": "null"}], "description": "", "title": "Url"}, "image": {"allOf": [{"$ref": "#/components/schemas/ImageUpdateSchema"}]}, "delete": {"title": "Delete", "type": "boolean"}}, "required": ["delete"], "title": "BottomSliderItemUpdateSchema", "type": "object"}, "BottomSliderUpdateSchema": {"description": "Pydantic schema for updating BottomSlider.", "properties": {"active": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "description": "", "title": "Active"}, "speed": {"allOf": [{"$ref": "#/components/schemas/SpeedEnum"}], "default": 30, "description": "", "title": "Speed"}, "items": {"items": {"$ref": "#/components/schemas/BottomSliderItemUpdateSchema"}, "title": "Items", "type": "array"}}, "title": "BottomSliderUpdateSchema", "type": "object"}, "BottomSliderItemOutSchema": {"description": "Pydantic schema for getting Bottom slider items.", "properties": {"image": {"$ref": "#/components/schemas/ImageOutSchema"}, "id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "ID"}, "url": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Url"}}, "required": ["image"], "title": "BottomSliderItemOutSchema", "type": "object"}, "BottomSliderOutSchema": {"description": "Pydantic schema for getting Bottom slider.", "properties": {"items": {"items": {"$ref": "#/components/schemas/BottomSliderItemOutSchema"}, "title": "Items", "type": "array"}, "speed": {"default": 30, "title": "Speed", "type": "integer"}, "active": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Active"}}, "required": ["items"], "title": "BottomSliderOutSchema", "type": "object"}, "ETEndBBannerUpdateSchema": {"description": "Pydantic schema for updating ETEndBBanner.", "properties": {"image": {"allOf": [{"$ref": "#/components/schemas/ImageUpdateSchema"}]}, "color": {"anyOf": [{"maxLength": 40, "type": "string"}, {"type": "null"}], "description": "", "title": "Color"}, "use_img": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "description": "", "title": "Use Img"}}, "title": "ETEndBBannerUpdateSchema", "type": "object"}, "ETEndBBannerOutSchema": {"description": "Pydantic schema for getting ETEndBBanner.", "properties": {"image": {"$ref": "#/components/schemas/ImageOutSchema"}, "color": {"anyOf": [{"maxLength": 40, "type": "string"}, {"type": "null"}], "title": "Color"}, "use_img": {"title": "Use Img", "type": "boolean"}}, "required": ["image", "use_img"], "title": "ETEndBBannerOutSchema", "type": "object"}, "NewsPromoCardOutSchema": {"description": "Pydantic schema for showing news and promo card.", "properties": {"name": {"anyOf": [{"maxLength": 60, "type": "string"}, {"type": "null"}], "title": "Name"}, "date_created": {"anyOf": [{"format": "date-time", "type": "string"}, {"type": "null"}], "title": "Date Created"}, "active": {"title": "Active", "type": "boolean"}, "slug": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Slug"}}, "required": ["active"], "title": "NewsPromoCardOutSchema", "type": "object"}, "PaginatedResponseSchema_NewsPromoCardOutSchema_": {"properties": {"count": {"title": "Count", "type": "integer"}, "next": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Next"}, "previous": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Previous"}, "results": {"items": {"$ref": "#/components/schemas/NewsPromoCardOutSchema"}, "title": "Results", "type": "array"}}, "required": ["count", "next", "previous", "results"], "title": "PaginatedResponseSchema[NewsPromoCardOutSchema]", "type": "object"}, "NewsPromoInSchema": {"description": "Pydantic schema for creating news and promos to server side.", "properties": {"seo_title": {"description": "", "maxLength": 60, "title": "Seo Title", "type": "string"}, "seo_description": {"description": "", "maxLength": 160, "title": "Seo Description", "type": "string"}, "seo_image": {"$ref": "#/components/schemas/ImageInSchema"}, "name_uk": {"maxLength": 100, "title": "Name Uk", "type": "string"}, "name_ru": {"maxLength": 100, "title": "Name Ru", "type": "string"}, "description_uk": {"maxLength": 2000, "title": "Description Uk", "type": "string"}, "description_ru": {"maxLength": 2000, "title": "Description Ru", "type": "string"}, "banner": {"$ref": "#/components/schemas/ImageInSchema"}, "active": {"description": "", "title": "Active", "type": "boolean"}, "promo": {"description": "", "title": "Promo", "type": "boolean"}, "video_link": {"description": "", "format": "uri", "minLength": 1, "title": "Video Link", "type": "string"}, "gallery": {"items": {"$ref": "#/components/schemas/ImageInSchema"}, "title": "Gallery", "type": "array"}}, "required": ["seo_title", "seo_description", "seo_image", "name_uk", "name_ru", "description_uk", "description_ru", "banner", "active", "promo", "video_link"], "title": "NewsPromoInSchema", "type": "object"}, "NewsPromoUpdateSchema": {"description": "Pydantic schema for updating news and promo.", "properties": {"seo_title": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Seo Title"}, "seo_description": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Seo Description"}, "seo_image": {"allOf": [{"$ref": "#/components/schemas/ImageUpdateSchema"}]}, "name_uk": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Name [Uk]"}, "name_ru": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Name [Ru]"}, "description_uk": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Description [Uk]"}, "description_ru": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Description [Ru]"}, "banner": {"allOf": [{"$ref": "#/components/schemas/ImageUpdateSchema"}]}, "active": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "description": "", "title": "Active"}, "video_link": {"anyOf": [{"format": "uri", "minLength": 1, "type": "string"}, {"type": "null"}], "description": "", "title": "Video Link"}, "gallery": {"items": {"$ref": "#/components/schemas/GalleryItemSchema"}, "title": "Gallery", "type": "array"}}, "title": "NewsPromoUpdateSchema", "type": "object"}, "NewsPromoOutSchema": {"description": "Pydantic schema for showing news and promo full data.", "properties": {"banner": {"$ref": "#/components/schemas/ImageOutSchema"}, "seo_image": {"$ref": "#/components/schemas/ImageOutSchema"}, "seo_title": {"maxLength": 60, "title": "Seo Title", "type": "string"}, "seo_description": {"maxLength": 160, "title": "Seo Description", "type": "string"}, "name_uk": {"anyOf": [{"maxLength": 60, "type": "string"}, {"type": "null"}], "title": "Name [Uk]"}, "name_ru": {"anyOf": [{"maxLength": 60, "type": "string"}, {"type": "null"}], "title": "Name [Ru]"}, "description_uk": {"anyOf": [{"maxLength": 20000, "type": "string"}, {"type": "null"}], "title": "Description [Uk]"}, "description_ru": {"anyOf": [{"maxLength": 20000, "type": "string"}, {"type": "null"}], "title": "Description [Ru]"}, "active": {"title": "Active", "type": "boolean"}, "promo": {"title": "Promo", "type": "boolean"}, "video_link": {"title": "Video Link", "type": "string"}, "gallery": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Gallery"}}, "required": ["banner", "seo_image", "seo_title", "seo_description", "active", "promo", "video_link"], "title": "NewsPromoOutSchema", "type": "object"}, "PageCardOutSchema": {"description": "Pydantic schema for showing pages card.", "properties": {"name": {"anyOf": [{"maxLength": 60, "type": "string"}, {"type": "null"}], "title": "Name"}, "date_created": {"anyOf": [{"format": "date-time", "type": "string"}, {"type": "null"}], "title": "Date Created"}, "active": {"title": "Active", "type": "boolean"}, "can_delete": {"default": false, "title": "Can Delete", "type": "boolean"}, "slug": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Slug"}}, "required": ["active"], "title": "PageCardOutSchema", "type": "object"}, "PaginatedResponseSchema_PageCardOutSchema_": {"properties": {"count": {"title": "Count", "type": "integer"}, "next": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Next"}, "previous": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Previous"}, "results": {"items": {"$ref": "#/components/schemas/PageCardOutSchema"}, "title": "Results", "type": "array"}}, "required": ["count", "next", "previous", "results"], "title": "PaginatedResponseSchema[PageCardOutSchema]", "type": "object"}, "PageInSchema": {"description": "Pydantic schema for creating pages to server side.", "properties": {"seo_title": {"description": "", "maxLength": 60, "title": "Seo Title", "type": "string"}, "seo_description": {"description": "", "maxLength": 160, "title": "Seo Description", "type": "string"}, "seo_image": {"$ref": "#/components/schemas/ImageInSchema"}, "name_uk": {"maxLength": 100, "title": "Name Uk", "type": "string"}, "name_ru": {"maxLength": 100, "title": "Name Ru", "type": "string"}, "content_uk": {"contentMediaType": "application/json", "contentSchema": {}, "title": "Content Uk", "type": "string"}, "content_ru": {"contentMediaType": "application/json", "contentSchema": {}, "title": "Content Ru", "type": "string"}, "banner": {"$ref": "#/components/schemas/ImageInSchema"}, "active": {"description": "", "title": "Active", "type": "boolean"}, "gallery": {"items": {"$ref": "#/components/schemas/ImageInSchema"}, "title": "Gallery", "type": "array"}}, "required": ["seo_title", "seo_description", "seo_image", "name_uk", "name_ru", "content_uk", "content_ru", "banner", "active"], "title": "PageInSchema", "type": "object"}, "PageUpdateSchema": {"description": "Pydantic schema for updating pages.", "properties": {"seo_title": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Seo Title"}, "seo_description": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Seo Description"}, "seo_image": {"allOf": [{"$ref": "#/components/schemas/ImageUpdateSchema"}]}, "name_uk": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Name [Uk]"}, "name_ru": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "", "title": "Name [Ru]"}, "content_uk": {"anyOf": [{"contentMediaType": "application/json", "contentSchema": {}, "type": "string"}, {"type": "null"}], "description": "", "title": "Content [Uk]"}, "content_ru": {"anyOf": [{"contentMediaType": "application/json", "contentSchema": {}, "type": "string"}, {"type": "null"}], "description": "", "title": "Content [Ru]"}, "banner": {"allOf": [{"$ref": "#/components/schemas/ImageUpdateSchema"}]}, "active": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "description": "", "title": "Active"}, "gallery": {"items": {"$ref": "#/components/schemas/GalleryItemSchema"}, "title": "Gallery", "type": "array"}}, "title": "PageUpdateSchema", "type": "object"}, "PageOutSchema": {"description": "Pydantic schema for showing pages full data.", "properties": {"banner": {"$ref": "#/components/schemas/ImageOutSchema"}, "seo_image": {"$ref": "#/components/schemas/ImageOutSchema"}, "seo_title": {"maxLength": 60, "title": "Seo Title", "type": "string"}, "seo_description": {"maxLength": 160, "title": "Seo Description", "type": "string"}, "name_uk": {"anyOf": [{"maxLength": 60, "type": "string"}, {"type": "null"}], "title": "Name [Uk]"}, "name_ru": {"anyOf": [{"maxLength": 60, "type": "string"}, {"type": "null"}], "title": "Name [Ru]"}, "content_uk": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Content [Uk]"}, "content_ru": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Content [Ru]"}, "active": {"title": "Active", "type": "boolean"}, "can_delete": {"default": false, "title": "Can Delete", "type": "boolean"}, "gallery": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Gallery"}}, "required": ["banner", "seo_image", "seo_title", "seo_description", "active"], "title": "PageOutSchema", "type": "object"}}, "securitySchemes": {"CustomJWTAuth": {"type": "http", "scheme": "bearer"}}}, "servers": []}